{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\cvd-risk-project\\\\frontend\\\\cvd-risk-frontend\\\\src\\\\context\\\\AppContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [currentChat, setCurrentChat] = useState([]);\n  const [predictionData, setPredictionData] = useState(null);\n  const [dashboardData, setDashboardData] = useState(null);\n\n  // NEW: Add batch results persistence\n  const [batchResults, setBatchResults] = useState(null);\n  const [batchFileName, setBatchFileName] = useState('');\n\n  // NEW: Enhanced chat with full conversation history\n  const [chatHistory, setChatHistory] = useState({}); // Store all conversations by session\n\n  const navigate = useNavigate();\n\n  // Initialize from localStorage on page load (using localStorage for better persistence)\n  useEffect(() => {\n    try {\n      const savedChat = localStorage.getItem('currentChat');\n      const savedPrediction = localStorage.getItem('predictionData');\n      const savedDashboard = localStorage.getItem('dashboardData');\n      const savedBatchResults = localStorage.getItem('batchResults');\n      const savedBatchFileName = localStorage.getItem('batchFileName');\n      const savedChatHistory = localStorage.getItem('chatHistory');\n      if (savedChat) setCurrentChat(JSON.parse(savedChat));\n      if (savedPrediction) setPredictionData(JSON.parse(savedPrediction));\n      if (savedDashboard) setDashboardData(JSON.parse(savedDashboard));\n      if (savedBatchResults) setBatchResults(JSON.parse(savedBatchResults));\n      if (savedBatchFileName) setBatchFileName(savedBatchFileName);\n      if (savedChatHistory) setChatHistory(JSON.parse(savedChatHistory));\n    } catch (error) {\n      console.error('Error loading saved data:', error);\n    }\n  }, []);\n\n  // Save to localStorage whenever state changes\n  useEffect(() => {\n    if (currentChat.length > 0) {\n      localStorage.setItem('currentChat', JSON.stringify(currentChat));\n    }\n  }, [currentChat]);\n  useEffect(() => {\n    if (predictionData) {\n      localStorage.setItem('predictionData', JSON.stringify(predictionData));\n    }\n  }, [predictionData]);\n  useEffect(() => {\n    if (dashboardData) {\n      localStorage.setItem('dashboardData', JSON.stringify(dashboardData));\n    }\n  }, [dashboardData]);\n\n  // NEW: Save batch results\n  useEffect(() => {\n    if (batchResults) {\n      localStorage.setItem('batchResults', JSON.stringify(batchResults));\n    } else {\n      localStorage.removeItem('batchResults');\n    }\n  }, [batchResults]);\n  useEffect(() => {\n    if (batchFileName) {\n      localStorage.setItem('batchFileName', batchFileName);\n    } else {\n      localStorage.removeItem('batchFileName');\n    }\n  }, [batchFileName]);\n\n  // NEW: Save chat history\n  useEffect(() => {\n    if (Object.keys(chatHistory).length > 0) {\n      localStorage.setItem('chatHistory', JSON.stringify(chatHistory));\n    }\n  }, [chatHistory]);\n\n  // Enhanced chat management\n  const addToChatHistory = (sessionId, message) => {\n    setChatHistory(prev => ({\n      ...prev,\n      [sessionId]: [...(prev[sessionId] || []), message]\n    }));\n  };\n  const getChatHistory = sessionId => {\n    return chatHistory[sessionId] || [];\n  };\n  const clearChatHistory = (sessionId = null) => {\n    if (sessionId) {\n      setChatHistory(prev => {\n        const newHistory = {\n          ...prev\n        };\n        delete newHistory[sessionId];\n        return newHistory;\n      });\n    } else {\n      setChatHistory({});\n      localStorage.removeItem('chatHistory');\n    }\n  };\n\n  // Batch results management\n  const setBatchPredictionResults = (results, fileName = '') => {\n    setBatchResults(results);\n    setBatchFileName(fileName);\n  };\n  const clearBatchResults = () => {\n    setBatchResults(null);\n    setBatchFileName('');\n  };\n  const resetChat = () => {\n    setCurrentChat([]);\n    localStorage.removeItem('currentChat');\n  };\n  const resetPrediction = () => {\n    setPredictionData(null);\n    localStorage.removeItem('predictionData');\n  };\n  const resetDashboard = () => {\n    setDashboardData(null);\n    localStorage.removeItem('dashboardData');\n  };\n\n  // Enhanced logout with complete cleanup\n  const logout = () => {\n    // Clear app-specific localStorage on logout\n    resetChat();\n    resetPrediction();\n    resetDashboard();\n    clearBatchResults();\n    clearChatHistory();\n\n    // Clear other auth-related storage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Navigate with error handling\n    try {\n      navigate('/login');\n    } catch (error) {\n      console.error('Navigation error:', error);\n      // Fallback navigation\n      window.location.href = '/login';\n    }\n  };\n  const contextValue = {\n    // Existing functionality\n    currentChat,\n    setCurrentChat,\n    predictionData,\n    setPredictionData,\n    dashboardData,\n    setDashboardData,\n    resetChat,\n    resetPrediction,\n    resetDashboard,\n    logout,\n    // NEW: Batch functionality\n    batchResults,\n    batchFileName,\n    setBatchPredictionResults,\n    clearBatchResults,\n    // NEW: Enhanced chat functionality\n    chatHistory,\n    addToChatHistory,\n    getChatHistory,\n    clearChatHistory\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"xLzmKBYJlvYr4ihEWs0NHnwcIaQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AppProvider;\nexport const useAppContext = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useAppContext must be used within an AppProvider');\n  }\n  return context;\n};\n_s2(useAppContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","currentChat","setCurrentChat","predictionData","setPredictionData","dashboardData","setDashboardData","batchResults","setBatchResults","batchFileName","setBatchFileName","chatHistory","setChatHistory","navigate","savedChat","localStorage","getItem","savedPrediction","savedDashboard","savedBatchResults","savedBatchFileName","savedChatHistory","JSON","parse","error","console","length","setItem","stringify","removeItem","Object","keys","addToChatHistory","sessionId","message","prev","getChatHistory","clearChatHistory","newHistory","setBatchPredictionResults","results","fileName","clearBatchResults","resetChat","resetPrediction","resetDashboard","logout","window","location","href","contextValue","Provider","value","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","context","undefined","Error","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/context/AppContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [currentChat, setCurrentChat] = useState([]);\r\n  const [predictionData, setPredictionData] = useState(null);\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  \r\n  // NEW: Add batch results persistence\r\n  const [batchResults, setBatchResults] = useState(null);\r\n  const [batchFileName, setBatchFileName] = useState('');\r\n  \r\n  // NEW: Enhanced chat with full conversation history\r\n  const [chatHistory, setChatHistory] = useState({}); // Store all conversations by session\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  // Initialize from localStorage on page load (using localStorage for better persistence)\r\n  useEffect(() => {\r\n    try {\r\n      const savedChat = localStorage.getItem('currentChat');\r\n      const savedPrediction = localStorage.getItem('predictionData');\r\n      const savedDashboard = localStorage.getItem('dashboardData');\r\n      const savedBatchResults = localStorage.getItem('batchResults');\r\n      const savedBatchFileName = localStorage.getItem('batchFileName');\r\n      const savedChatHistory = localStorage.getItem('chatHistory');\r\n\r\n      if (savedChat) setCurrentChat(JSON.parse(savedChat));\r\n      if (savedPrediction) setPredictionData(JSON.parse(savedPrediction));\r\n      if (savedDashboard) setDashboardData(JSON.parse(savedDashboard));\r\n      if (savedBatchResults) setBatchResults(JSON.parse(savedBatchResults));\r\n      if (savedBatchFileName) setBatchFileName(savedBatchFileName);\r\n      if (savedChatHistory) setChatHistory(JSON.parse(savedChatHistory));\r\n    } catch (error) {\r\n      console.error('Error loading saved data:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Save to localStorage whenever state changes\r\n  useEffect(() => {\r\n    if (currentChat.length > 0) {\r\n      localStorage.setItem('currentChat', JSON.stringify(currentChat));\r\n    }\r\n  }, [currentChat]);\r\n\r\n  useEffect(() => {\r\n    if (predictionData) {\r\n      localStorage.setItem('predictionData', JSON.stringify(predictionData));\r\n    }\r\n  }, [predictionData]);\r\n\r\n  useEffect(() => {\r\n    if (dashboardData) {\r\n      localStorage.setItem('dashboardData', JSON.stringify(dashboardData));\r\n    }\r\n  }, [dashboardData]);\r\n\r\n  // NEW: Save batch results\r\n  useEffect(() => {\r\n    if (batchResults) {\r\n      localStorage.setItem('batchResults', JSON.stringify(batchResults));\r\n    } else {\r\n      localStorage.removeItem('batchResults');\r\n    }\r\n  }, [batchResults]);\r\n\r\n  useEffect(() => {\r\n    if (batchFileName) {\r\n      localStorage.setItem('batchFileName', batchFileName);\r\n    } else {\r\n      localStorage.removeItem('batchFileName');\r\n    }\r\n  }, [batchFileName]);\r\n\r\n  // NEW: Save chat history\r\n  useEffect(() => {\r\n    if (Object.keys(chatHistory).length > 0) {\r\n      localStorage.setItem('chatHistory', JSON.stringify(chatHistory));\r\n    }\r\n  }, [chatHistory]);\r\n\r\n  // Enhanced chat management\r\n  const addToChatHistory = (sessionId, message) => {\r\n    setChatHistory(prev => ({\r\n      ...prev,\r\n      [sessionId]: [...(prev[sessionId] || []), message]\r\n    }));\r\n  };\r\n\r\n  const getChatHistory = (sessionId) => {\r\n    return chatHistory[sessionId] || [];\r\n  };\r\n\r\n  const clearChatHistory = (sessionId = null) => {\r\n    if (sessionId) {\r\n      setChatHistory(prev => {\r\n        const newHistory = { ...prev };\r\n        delete newHistory[sessionId];\r\n        return newHistory;\r\n      });\r\n    } else {\r\n      setChatHistory({});\r\n      localStorage.removeItem('chatHistory');\r\n    }\r\n  };\r\n\r\n  // Batch results management\r\n  const setBatchPredictionResults = (results, fileName = '') => {\r\n    setBatchResults(results);\r\n    setBatchFileName(fileName);\r\n  };\r\n\r\n  const clearBatchResults = () => {\r\n    setBatchResults(null);\r\n    setBatchFileName('');\r\n  };\r\n\r\n  const resetChat = () => {\r\n    setCurrentChat([]);\r\n    localStorage.removeItem('currentChat');\r\n  };\r\n\r\n  const resetPrediction = () => {\r\n    setPredictionData(null);\r\n    localStorage.removeItem('predictionData');\r\n  };\r\n\r\n  const resetDashboard = () => {\r\n    setDashboardData(null);\r\n    localStorage.removeItem('dashboardData');\r\n  };\r\n\r\n  // Enhanced logout with complete cleanup\r\n  const logout = () => {\r\n    // Clear app-specific localStorage on logout\r\n    resetChat();\r\n    resetPrediction();\r\n    resetDashboard();\r\n    clearBatchResults();\r\n    clearChatHistory();\r\n    \r\n    // Clear other auth-related storage\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n        \r\n    // Navigate with error handling\r\n    try {\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error('Navigation error:', error);\r\n      // Fallback navigation\r\n      window.location.href = '/login';\r\n    }\r\n  };\r\n\r\n  const contextValue = {\r\n    // Existing functionality\r\n    currentChat,\r\n    setCurrentChat,\r\n    predictionData,\r\n    setPredictionData,\r\n    dashboardData,\r\n    setDashboardData,\r\n    resetChat,\r\n    resetPrediction,\r\n    resetDashboard,\r\n    logout,\r\n    \r\n    // NEW: Batch functionality\r\n    batchResults,\r\n    batchFileName,\r\n    setBatchPredictionResults,\r\n    clearBatchResults,\r\n    \r\n    // NEW: Enhanced chat functionality\r\n    chatHistory,\r\n    addToChatHistory,\r\n    getChatHistory,\r\n    clearChatHistory\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={contextValue}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppContext = () => {\r\n  const context = useContext(AppContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAppContext must be used within an AppProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}