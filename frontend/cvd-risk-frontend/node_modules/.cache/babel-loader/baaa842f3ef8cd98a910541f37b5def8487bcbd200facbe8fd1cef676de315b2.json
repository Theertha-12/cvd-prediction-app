{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\cvd-risk-project\\\\frontend\\\\cvd-risk-frontend\\\\src\\\\context\\\\AppContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [currentChat, setCurrentChat] = useState([]);\n  const [predictionData, setPredictionData] = useState(null);\n  const [dashboardData, setDashboardData] = useState(null);\n  const navigate = useNavigate();\n\n  // Initialize from session storage on page load\n  useEffect(() => {\n    const savedChat = sessionStorage.getItem('currentChat');\n    const savedPrediction = sessionStorage.getItem('predictionData');\n    const savedDashboard = sessionStorage.getItem('dashboardData');\n    if (savedChat) setCurrentChat(JSON.parse(savedChat));\n    if (savedPrediction) setPredictionData(JSON.parse(savedPrediction));\n    if (savedDashboard) setDashboardData(JSON.parse(savedDashboard));\n  }, []);\n\n  // Save to session storage whenever state changes\n  useEffect(() => {\n    sessionStorage.setItem('currentChat', JSON.stringify(currentChat));\n  }, [currentChat]);\n  useEffect(() => {\n    sessionStorage.setItem('predictionData', JSON.stringify(predictionData));\n  }, [predictionData]);\n  useEffect(() => {\n    sessionStorage.setItem('dashboardData', JSON.stringify(dashboardData));\n  }, [dashboardData]);\n  const resetChat = () => {\n    setCurrentChat([]);\n    sessionStorage.removeItem('currentChat');\n  };\n  const resetPrediction = () => {\n    setPredictionData(null);\n    sessionStorage.removeItem('predictionData');\n  };\n  const resetDashboard = () => {\n    setDashboardData(null);\n    sessionStorage.removeItem('dashboardData');\n  };\n  const logout = () => {\n    // Clear app-specific session storage on logout\n    resetChat();\n    resetPrediction();\n    resetDashboard();\n    navigate('/login');\n  };\n  const contextValue = {\n    currentChat,\n    setCurrentChat,\n    predictionData,\n    setPredictionData,\n    dashboardData,\n    setDashboardData,\n    resetChat,\n    resetPrediction,\n    resetDashboard,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"cGhnF4AZ/YSmi0G9Gs1sc1o78e4=\", false, function () {\n  return [useNavigate];\n});\n_c = AppProvider;\nexport const useAppContext = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useAppContext must be used within an AppProvider');\n  }\n  return context;\n};\n_s2(useAppContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","currentChat","setCurrentChat","predictionData","setPredictionData","dashboardData","setDashboardData","navigate","savedChat","sessionStorage","getItem","savedPrediction","savedDashboard","JSON","parse","setItem","stringify","resetChat","removeItem","resetPrediction","resetDashboard","logout","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","context","undefined","Error","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/context/AppContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [currentChat, setCurrentChat] = useState([]);\r\n  const [predictionData, setPredictionData] = useState(null);\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Initialize from session storage on page load\r\n  useEffect(() => {\r\n    const savedChat = sessionStorage.getItem('currentChat');\r\n    const savedPrediction = sessionStorage.getItem('predictionData');\r\n    const savedDashboard = sessionStorage.getItem('dashboardData');\r\n\r\n    if (savedChat) setCurrentChat(JSON.parse(savedChat));\r\n    if (savedPrediction) setPredictionData(JSON.parse(savedPrediction));\r\n    if (savedDashboard) setDashboardData(JSON.parse(savedDashboard));\r\n  }, []);\r\n\r\n  // Save to session storage whenever state changes\r\n  useEffect(() => {\r\n    sessionStorage.setItem('currentChat', JSON.stringify(currentChat));\r\n  }, [currentChat]);\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem('predictionData', JSON.stringify(predictionData));\r\n  }, [predictionData]);\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem('dashboardData', JSON.stringify(dashboardData));\r\n  }, [dashboardData]);\r\n\r\n  const resetChat = () => {\r\n    setCurrentChat([]);\r\n    sessionStorage.removeItem('currentChat');\r\n  };\r\n\r\n  const resetPrediction = () => {\r\n    setPredictionData(null);\r\n    sessionStorage.removeItem('predictionData');\r\n  };\r\n\r\n  const resetDashboard = () => {\r\n    setDashboardData(null);\r\n    sessionStorage.removeItem('dashboardData');\r\n  };\r\n\r\n  const logout = () => {\r\n    // Clear app-specific session storage on logout\r\n    resetChat();\r\n    resetPrediction();\r\n    resetDashboard();\r\n    navigate('/login');\r\n  };\r\n\r\n  const contextValue = {\r\n    currentChat,\r\n    setCurrentChat,\r\n    predictionData,\r\n    setPredictionData,\r\n    dashboardData,\r\n    setDashboardData,\r\n    resetChat,\r\n    resetPrediction,\r\n    resetDashboard,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={contextValue}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppContext = () => {\r\n  const context = useContext(AppContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAppContext must be used within an AppProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}