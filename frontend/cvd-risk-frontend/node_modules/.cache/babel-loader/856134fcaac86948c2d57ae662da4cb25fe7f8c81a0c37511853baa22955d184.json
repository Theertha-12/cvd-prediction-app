{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\cvd-risk-project\\\\frontend\\\\cvd-risk-frontend\\\\src\\\\components\\\\chat\\\\ChatInterface.jsx\",\n  _s = $RefreshSig$();\n// src/components/chat/ChatInterface.jsx\nimport React, { useState, useEffect, useRef } from \"react\";\nimport useAuth from \"../../hooks/useAuth\";\nimport api from \"../../api/axios\";\nimport MessageBubble from \"./MessageBubble\";\nimport SessionSidebar from \"./SessionSidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userMenuButtons = [\"What can I do to lower my CVD risk?\", \"What does my prediction mean?\", \"Show tips to improve heart health\"];\nconst doctorMenuButtons = [\"Show statistics for my patients\", \"Recent high-risk cases?\", \"Download batch results\"];\nconst ChatInterface = ({\n  role\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [sessionId, setSessionId] = useState(\"\");\n  const [sessions, setSessions] = useState([]);\n  const messagesEndRef = useRef(null);\n\n  // Fetch chat sessions on mount\n  useEffect(() => {\n    const fetchSessions = async () => {\n      try {\n        const res = await api.get(\"/chat/sessions\");\n        setSessions(res.data);\n        if (res.data.length > 0) {\n          setSessionId(res.data[0].session_id);\n        }\n      } catch (err) {\n        console.error(\"Failed to fetch chat sessions.\", err);\n      }\n    };\n    fetchSessions();\n  }, []);\n\n  // Fetch messages for current session\n  useEffect(() => {\n    if (!sessionId) {\n      setMessages([]);\n      return;\n    }\n    const fetchMessages = async () => {\n      try {\n        const res = await api.get(`/chat/history/${sessionId}?limit=50`);\n        setMessages(res.data.messages || []);\n      } catch (err) {\n        console.error(\"Failed to fetch chat messages.\", err);\n      }\n    };\n    fetchMessages();\n  }, [sessionId]);\n\n  // Scroll to bottom on messages update\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const menuBtns = role === \"doctor\" ? doctorMenuButtons : userMenuButtons;\n  async function sendMessage(message) {\n    if (!message.trim()) return;\n    setMessages(prev => [...prev, {\n      msg: message,\n      sender: \"user\"\n    }]);\n    setInput(\"\");\n    try {\n      const res = await api.post(\"/chat/message\", {\n        message,\n        session_id: sessionId || \"\"\n      });\n      setMessages(prev => [...prev, {\n        msg: res.data.response,\n        sender: \"bot\"\n      }]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        msg: \"Sorry, something went wrong.\",\n        sender: \"bot\"\n      }]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex max-w-7xl mx-auto border rounded shadow h-[600px] overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(SessionSidebar, {\n      sessions: sessions,\n      currentSessionId: sessionId,\n      setSessionId: setSessionId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col flex-grow bg-white p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow overflow-y-auto mb-2\",\n        children: [messages.map((m, idx) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n          message: m.msg,\n          sender: m.sender\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 flex flex-wrap gap-2\",\n        children: menuBtns.map((btn, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendMessage(btn),\n          className: \"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\",\n          children: btn\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          sendMessage(input);\n        },\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: 500,\n          className: \"flex-grow border rounded-l px-4 py-2\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message here...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-green-600 hover:bg-green-700 text-white px-6 rounded-r\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"WHgLR6e/h90e+iQcH7E7qnuIHPY=\", false, function () {\n  return [useAuth];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","api","MessageBubble","SessionSidebar","jsxDEV","_jsxDEV","userMenuButtons","doctorMenuButtons","ChatInterface","role","_s","user","messages","setMessages","input","setInput","sessionId","setSessionId","sessions","setSessions","messagesEndRef","fetchSessions","res","get","data","length","session_id","err","console","error","fetchMessages","_messagesEndRef$curre","current","scrollIntoView","behavior","menuBtns","sendMessage","message","trim","prev","msg","sender","post","response","className","children","currentSessionId","fileName","_jsxFileName","lineNumber","columnNumber","map","m","idx","ref","btn","onClick","onSubmit","e","preventDefault","type","maxLength","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/components/chat/ChatInterface.jsx"],"sourcesContent":["// src/components/chat/ChatInterface.jsx\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport api from \"../../api/axios\";\r\nimport MessageBubble from \"./MessageBubble\";\r\nimport SessionSidebar from \"./SessionSidebar\";\r\n\r\nconst userMenuButtons = [\r\n  \"What can I do to lower my CVD risk?\",\r\n  \"What does my prediction mean?\",\r\n  \"Show tips to improve heart health\",\r\n];\r\nconst doctorMenuButtons = [\r\n  \"Show statistics for my patients\",\r\n  \"Recent high-risk cases?\",\r\n  \"Download batch results\",\r\n];\r\n\r\nconst ChatInterface = ({ role }) => {\r\n  const { user } = useAuth();\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [sessionId, setSessionId] = useState(\"\");\r\n  const [sessions, setSessions] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Fetch chat sessions on mount\r\n  useEffect(() => {\r\n    const fetchSessions = async () => {\r\n      try {\r\n        const res = await api.get(\"/chat/sessions\");\r\n        setSessions(res.data);\r\n        if (res.data.length > 0) {\r\n          setSessionId(res.data[0].session_id);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch chat sessions.\", err);\r\n      }\r\n    };\r\n    fetchSessions();\r\n  }, []);\r\n\r\n  // Fetch messages for current session\r\n  useEffect(() => {\r\n    if (!sessionId) {\r\n      setMessages([]);\r\n      return;\r\n    }\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const res = await api.get(`/chat/history/${sessionId}?limit=50`);\r\n        setMessages(res.data.messages || []);\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch chat messages.\", err);\r\n      }\r\n    };\r\n    fetchMessages();\r\n  }, [sessionId]);\r\n\r\n  // Scroll to bottom on messages update\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const menuBtns = role === \"doctor\" ? doctorMenuButtons : userMenuButtons;\r\n\r\n  async function sendMessage(message) {\r\n    if (!message.trim()) return;\r\n    setMessages((prev) => [...prev, { msg: message, sender: \"user\" }]);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const res = await api.post(\"/chat/message\", {\r\n        message,\r\n        session_id: sessionId || \"\",\r\n      });\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { msg: res.data.response, sender: \"bot\" },\r\n      ]);\r\n    } catch (err) {\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { msg: \"Sorry, something went wrong.\", sender: \"bot\" },\r\n      ]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex max-w-7xl mx-auto border rounded shadow h-[600px] overflow-hidden\">\r\n      {/* Sidebar for sessions */}\r\n      <SessionSidebar\r\n        sessions={sessions}\r\n        currentSessionId={sessionId}\r\n        setSessionId={setSessionId}\r\n      />\r\n      <div className=\"flex flex-col flex-grow bg-white p-4\">\r\n        <div className=\"flex-grow overflow-y-auto mb-2\">\r\n          {messages.map((m, idx) => (\r\n            <MessageBubble key={idx} message={m.msg} sender={m.sender} />\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n        <div className=\"mb-4 flex flex-wrap gap-2\">\r\n          {menuBtns.map((btn, idx) => (\r\n            <button\r\n              key={idx}\r\n              onClick={() => sendMessage(btn)}\r\n              className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n            >\r\n              {btn}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        {/* Input form */}\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            sendMessage(input);\r\n          }}\r\n          className=\"flex\"\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            maxLength={500}\r\n            className=\"flex-grow border rounded-l px-4 py-2\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type your message here...\"\r\n            required\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-green-600 hover:bg-green-700 text-white px-6 rounded-r\"\r\n          >\r\n            Send\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}