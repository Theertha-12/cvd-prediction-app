{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\cvd-risk-project\\\\frontend\\\\cvd-risk-frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.jsx\nimport React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\nimport api from '../api/axios'; // Import the configured axios instance\nimport { jwtDecode } from 'jwt-decode'; // npm install jwt-decode\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true); // Added loading state\n\n  const decodeToken = useCallback(tk => {\n    try {\n      const decoded = jwtDecode(tk);\n      // Check if token is expired\n      if (decoded.exp * 1000 < Date.now()) {\n        console.warn(\"Token expired.\");\n        localStorage.removeItem('token');\n        return null;\n      }\n      return {\n        email: decoded.sub,\n        role: decoded.role,\n        id: decoded.id || null // Assuming 'id' might be in token payload\n      };\n    } catch (error) {\n      console.error(\"Failed to decode token:\", error);\n      return null;\n    }\n  }, []);\n\n  // Effect to initialize user from token\n  useEffect(() => {\n    if (token) {\n      const decodedUser = decodeToken(token);\n      if (decodedUser) {\n        setUser(decodedUser);\n      } else {\n        setToken(null); // Clear invalid token\n      }\n    }\n    setLoading(false); // Finished initial loading\n  }, [token, decodeToken]);\n  const login = useCallback(async (email, password) => {\n    try {\n      const response = await api.post('/auth/token', new URLSearchParams({\n        username: email,\n        password: password\n      }), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded' // OAuth2 password flow\n        }\n      });\n      const {\n        access_token,\n        user_role\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n      setUser({\n        email,\n        role: user_role\n      }); // Update user state\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      console.error('Login error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw error; // Re-throw to be caught by component\n    }\n  }, []);\n  const register = useCallback(async userData => {\n    try {\n      const response = await api.post('/auth/register', userData, {\n        headers: {\n          'Content-Type': 'application/json' // <--- ADD THIS LINE\n        }\n      });\n      // After successful registration, you might want to automatically log in the user\n      // or redirect them to the login page.\n      // For now, let's just return the response\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      console.error('Registration error:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      throw error;\n    }\n  }, []);\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  }, []);\n\n  // Function to fetch current user data (for /auth/me)\n  const fetchCurrentUser = useCallback(async () => {\n    if (!token) {\n      setUser(null);\n      return;\n    }\n    try {\n      const response = await api.get('/auth/me');\n      setUser(response.data);\n    } catch (error) {\n      var _error$response3;\n      console.error('Failed to fetch current user:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      // If /auth/me fails, typically due to expired/invalid token, log out\n      logout();\n    }\n  }, [token, logout]);\n\n  // Fetch current user on app load or when token changes\n  useEffect(() => {\n    if (token && !user) {\n      // Only fetch if token exists but user state is not set\n      fetchCurrentUser();\n    }\n  }, [token, user, fetchCurrentUser]);\n  const value = {\n    user,\n    token,\n    loading,\n    // Provide loading state\n    login,\n    register,\n    logout,\n    fetchCurrentUser,\n    isAuthenticated: !!user,\n    // Convenience boolean\n    hasRole: useCallback(roles => {\n      if (!user || !user.role) return false;\n      return Array.isArray(roles) ? roles.includes(user.role) : user.role === roles;\n    }, [user])\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"515+p3pIxwQ/a8VMfzOURRbAcLc=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useCallback","api","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","decodeToken","tk","decoded","exp","Date","now","console","warn","removeItem","email","sub","role","id","error","decodedUser","login","password","response","post","URLSearchParams","username","headers","access_token","user_role","data","setItem","_error$response","message","register","userData","_error$response2","logout","fetchCurrentUser","get","_error$response3","value","isAuthenticated","hasRole","roles","Array","isArray","includes","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/context/AuthContext.jsx"],"sourcesContent":["// src/context/AuthContext.jsx\r\nimport React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\r\nimport api from '../api/axios'; // Import the configured axios instance\r\nimport { jwtDecode } from 'jwt-decode'; // npm install jwt-decode\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true); // Added loading state\r\n\r\n  const decodeToken = useCallback((tk) => {\r\n    try {\r\n      const decoded = jwtDecode(tk);\r\n      // Check if token is expired\r\n      if (decoded.exp * 1000 < Date.now()) {\r\n        console.warn(\"Token expired.\");\r\n        localStorage.removeItem('token');\r\n        return null;\r\n      }\r\n      return {\r\n        email: decoded.sub,\r\n        role: decoded.role,\r\n        id: decoded.id || null, // Assuming 'id' might be in token payload\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Failed to decode token:\", error);\r\n      return null;\r\n    }\r\n  }, []);\r\n\r\n  // Effect to initialize user from token\r\n  useEffect(() => {\r\n    if (token) {\r\n      const decodedUser = decodeToken(token);\r\n      if (decodedUser) {\r\n        setUser(decodedUser);\r\n      } else {\r\n        setToken(null); // Clear invalid token\r\n      }\r\n    }\r\n    setLoading(false); // Finished initial loading\r\n  }, [token, decodeToken]);\r\n\r\n  const login = useCallback(async (email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/token', new URLSearchParams({\r\n        username: email,\r\n        password: password,\r\n      }), {\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded' // OAuth2 password flow\r\n        }\r\n      });\r\n      const { access_token, user_role } = response.data;\r\n      localStorage.setItem('token', access_token);\r\n      setToken(access_token);\r\n      setUser({ email, role: user_role }); // Update user state\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Login error:', error.response?.data || error.message);\r\n      throw error; // Re-throw to be caught by component\r\n    }\r\n  }, []);\r\n\r\n  const register = useCallback(async (userData) => {\r\n    try {\r\n      const response = await api.post('/auth/register', userData, {\r\n        headers: {\r\n          'Content-Type': 'application/json' // <--- ADD THIS LINE\r\n        }\r\n      });\r\n      // After successful registration, you might want to automatically log in the user\r\n      // or redirect them to the login page.\r\n      // For now, let's just return the response\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Registration error:', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n  }, []);\r\n\r\n  // Function to fetch current user data (for /auth/me)\r\n  const fetchCurrentUser = useCallback(async () => {\r\n    if (!token) {\r\n      setUser(null);\r\n      return;\r\n    }\r\n    try {\r\n      const response = await api.get('/auth/me');\r\n      setUser(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch current user:', error.response?.data || error.message);\r\n      // If /auth/me fails, typically due to expired/invalid token, log out\r\n      logout();\r\n    }\r\n  }, [token, logout]);\r\n\r\n  // Fetch current user on app load or when token changes\r\n  useEffect(() => {\r\n    if (token && !user) { // Only fetch if token exists but user state is not set\r\n      fetchCurrentUser();\r\n    }\r\n  }, [token, user, fetchCurrentUser]);\r\n\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading, // Provide loading state\r\n    login,\r\n    register,\r\n    logout,\r\n    fetchCurrentUser,\r\n    isAuthenticated: !!user, // Convenience boolean\r\n    hasRole: useCallback((roles) => {\r\n      if (!user || !user.role) return false;\r\n      return Array.isArray(roles) ? roles.includes(user.role) : user.role === roles;\r\n    }, [user]),\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}