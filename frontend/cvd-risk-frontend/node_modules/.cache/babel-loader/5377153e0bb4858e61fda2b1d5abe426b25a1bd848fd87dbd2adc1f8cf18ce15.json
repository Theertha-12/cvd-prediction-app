{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\cvd-risk-project\\\\frontend\\\\cvd-risk-frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.jsx\nimport React, { useEffect, useState } from \"react\";\nimport useAuth from \"../hooks/useAuth\";\nimport StatsCard from \"../components/dashboard/StatsCard\";\nimport RiskGauge from \"../components/dashboard/RiskGauge\";\nimport PredictionHistory from \"../components/dashboard/PredictionHistory\";\nimport ActivityTimeline from \"../components/dashboard/ActivityTimeline\";\nimport BatchResults from \"../components/batch/BatchResults\";\nimport FileUploader from \"../components/batch/FileUploader\";\nimport ChatInterface from \"../components/chat/ChatInterface\";\nimport api from \"../api/axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n\n  // User data and activities state\n  const [loading, setLoading] = useState(true);\n  const [prediction, setPrediction] = useState(null);\n  const [activities, setActivities] = useState([]);\n  const [batchResults, setBatchResults] = useState([]);\n  useEffect(() => {\n    if (!user) return;\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        if (user.role === \"user\") {\n          // Load single prediction and user activities\n          const [predRes, actRes] = await Promise.all([api.get(`/prediction/user/${user.id}`), api.get(`/dashboard/activities/user/${user.id}`)]);\n          setPrediction(predRes.data);\n          setActivities(actRes.data);\n        } else if (user.role === \"doctor\") {\n          // Load patient activities for doctor\n          const res = await api.get(`/dashboard/activities/doctor/${user.id}`);\n          setActivities(res.data);\n        }\n      } catch (err) {\n        console.error(\"Failed to fetch dashboard data\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [user]);\n\n  // Handle batch uploaded results (for doctor)\n  const handleBatchResults = results => {\n    setBatchResults(results);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-20 text-lg\",\n      children: \"Loading dashboard...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: [\"Welcome, \", user.role === \"doctor\" ? `Dr. ${user.full_name}` : user.full_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), user.role === \"user\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StatsCard, {\n        prediction: prediction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RiskGauge, {\n        risk: prediction === null || prediction === void 0 ? void 0 : prediction.risk_percentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PredictionHistory, {\n        history: activities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ActivityTimeline, {\n        activities: activities === null || activities === void 0 ? void 0 : activities.activities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChatInterface, {\n        role: \"user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), user.role === \"doctor\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: /*#__PURE__*/_jsxDEV(FileUploader, {\n          onResults: handleBatchResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), batchResults.length > 0 && /*#__PURE__*/_jsxDEV(BatchResults, {\n        results: batchResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(ActivityTimeline, {\n        activities: activities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChatInterface, {\n        role: \"doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"0dpaQJKwkfraE1VU8QVKzzoxiNk=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useAuth","StatsCard","RiskGauge","PredictionHistory","ActivityTimeline","BatchResults","FileUploader","ChatInterface","api","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","user","loading","setLoading","prediction","setPrediction","activities","setActivities","batchResults","setBatchResults","fetchData","role","predRes","actRes","Promise","all","get","id","data","res","err","console","error","handleBatchResults","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","full_name","risk","risk_percentage","history","onResults","length","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/pages/Dashboard.jsx"],"sourcesContent":["// src/pages/Dashboard.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport StatsCard from \"../components/dashboard/StatsCard\";\r\nimport RiskGauge from \"../components/dashboard/RiskGauge\";\r\nimport PredictionHistory from \"../components/dashboard/PredictionHistory\";\r\nimport ActivityTimeline from \"../components/dashboard/ActivityTimeline\";\r\nimport BatchResults from \"../components/batch/BatchResults\";\r\nimport FileUploader from \"../components/batch/FileUploader\";\r\nimport ChatInterface from \"../components/chat/ChatInterface\";\r\nimport api from \"../api/axios\";\r\n\r\nconst Dashboard = () => {\r\n  const { user } = useAuth();\r\n\r\n  // User data and activities state\r\n  const [loading, setLoading] = useState(true);\r\n  const [prediction, setPrediction] = useState(null);\r\n  const [activities, setActivities] = useState([]);\r\n  const [batchResults, setBatchResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        if (user.role === \"user\") {\r\n          // Load single prediction and user activities\r\n          const [predRes, actRes] = await Promise.all([\r\n            api.get(`/prediction/user/${user.id}`),\r\n            api.get(`/dashboard/activities/user/${user.id}`),\r\n          ]);\r\n          setPrediction(predRes.data);\r\n          setActivities(actRes.data);\r\n        } else if (user.role === \"doctor\") {\r\n          // Load patient activities for doctor\r\n          const res = await api.get(`/dashboard/activities/doctor/${user.id}`);\r\n          setActivities(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch dashboard data\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [user]);\r\n\r\n  // Handle batch uploaded results (for doctor)\r\n  const handleBatchResults = (results) => {\r\n    setBatchResults(results);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"text-center mt-20 text-lg\">Loading dashboard...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">\r\n        Welcome, {user.role === \"doctor\" ? `Dr. ${user.full_name}` : user.full_name}\r\n      </h1>\r\n\r\n      {user.role === \"user\" && (\r\n        <>\r\n          <StatsCard prediction={prediction} />\r\n          <RiskGauge risk={prediction?.risk_percentage} />\r\n          <PredictionHistory history={activities} />\r\n          <ActivityTimeline activities={activities?.activities} />\r\n          <ChatInterface role=\"user\" />\r\n        </>\r\n      )}\r\n\r\n      {user.role === \"doctor\" && (\r\n        <>\r\n          <div className=\"mb-6\">\r\n            <FileUploader onResults={handleBatchResults} />\r\n          </div>\r\n          {batchResults.length > 0 && <BatchResults results={batchResults} />}\r\n          <ActivityTimeline activities={activities} />\r\n          <ChatInterface role=\"doctor\" />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}