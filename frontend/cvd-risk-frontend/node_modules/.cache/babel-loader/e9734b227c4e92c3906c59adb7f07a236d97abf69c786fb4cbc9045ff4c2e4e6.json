{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\cvd-risk-project\\\\frontend\\\\cvd-risk-frontend\\\\src\\\\context\\\\ChatContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/ChatContext.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { getUserChatSessions, createNewSession } from '../services/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext(null);\nexport const ChatProvider = ({\n  children\n}) => {\n  _s();\n  const [sessions, setSessions] = useState([]);\n  const [activeSession, setActiveSession] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchSessions = async () => {\n      try {\n        const sessions = await getUserChatSessions();\n        setSessions(sessions);\n        if (sessions.length > 0 && !activeSession) {\n          setActiveSession(sessions[0].session_id);\n        }\n      } catch (error) {\n        console.error('Failed to load chat sessions:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSessions();\n  }, []);\n  const createSession = async sessionName => {\n    try {\n      const newSession = await createNewSession(sessionName);\n      setSessions(prev => [newSession, ...prev]);\n      setActiveSession(newSession.session_id);\n      return newSession;\n    } catch (error) {\n      console.error('Failed to create session:', error);\n      throw error;\n    }\n  };\n  const value = {\n    sessions,\n    activeSession,\n    loading,\n    setActiveSession,\n    createSession\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n_s(ChatProvider, \"8I0iOi/VXk+lS03TbZierB0bFSE=\");\n_c = ChatProvider;\nexport const useChat = () => {\n  _s2();\n  return useContext(ChatContext);\n};\n_s2(useChat, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","getUserChatSessions","createNewSession","jsxDEV","_jsxDEV","ChatContext","ChatProvider","children","_s","sessions","setSessions","activeSession","setActiveSession","loading","setLoading","fetchSessions","length","session_id","error","console","createSession","sessionName","newSession","prev","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useChat","_s2","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/context/ChatContext.jsx"],"sourcesContent":["// src/context/ChatContext.jsx\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { getUserChatSessions, createNewSession } from '../services/chat';\r\n\r\nconst ChatContext = createContext(null);\r\n\r\nexport const ChatProvider = ({ children }) => {\r\n  const [sessions, setSessions] = useState([]);\r\n  const [activeSession, setActiveSession] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchSessions = async () => {\r\n      try {\r\n        const sessions = await getUserChatSessions();\r\n        setSessions(sessions);\r\n        if (sessions.length > 0 && !activeSession) {\r\n          setActiveSession(sessions[0].session_id);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load chat sessions:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchSessions();\r\n  }, []);\r\n\r\n  const createSession = async (sessionName) => {\r\n    try {\r\n      const newSession = await createNewSession(sessionName);\r\n      setSessions(prev => [newSession, ...prev]);\r\n      setActiveSession(newSession.session_id);\r\n      return newSession;\r\n    } catch (error) {\r\n      console.error('Failed to create session:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    sessions,\r\n    activeSession,\r\n    loading,\r\n    setActiveSession,\r\n    createSession\r\n  };\r\n\r\n  return <ChatContext.Provider value={value}>{children}</ChatContext.Provider>;\r\n};\r\n\r\nexport const useChat = () => useContext(ChatContext);"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,mBAAmB,EAAEC,gBAAgB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,WAAW,gBAAGR,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMN,QAAQ,GAAG,MAAMR,mBAAmB,CAAC,CAAC;QAC5CS,WAAW,CAACD,QAAQ,CAAC;QACrB,IAAIA,QAAQ,CAACO,MAAM,GAAG,CAAC,IAAI,CAACL,aAAa,EAAE;UACzCC,gBAAgB,CAACH,QAAQ,CAAC,CAAC,CAAC,CAACQ,UAAU,CAAC;QAC1C;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,SAAS;QACRJ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,aAAa,GAAG,MAAOC,WAAW,IAAK;IAC3C,IAAI;MACF,MAAMC,UAAU,GAAG,MAAMpB,gBAAgB,CAACmB,WAAW,CAAC;MACtDX,WAAW,CAACa,IAAI,IAAI,CAACD,UAAU,EAAE,GAAGC,IAAI,CAAC,CAAC;MAC1CX,gBAAgB,CAACU,UAAU,CAACL,UAAU,CAAC;MACvC,OAAOK,UAAU;IACnB,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMM,KAAK,GAAG;IACZf,QAAQ;IACRE,aAAa;IACbE,OAAO;IACPD,gBAAgB;IAChBQ;EACF,CAAC;EAED,oBAAOhB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAjB,QAAA,EAAEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACrB,EAAA,CA3CWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA6CzB,OAAO,MAAMyB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMlC,UAAU,CAACO,WAAW,CAAC;AAAA;AAAC2B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}