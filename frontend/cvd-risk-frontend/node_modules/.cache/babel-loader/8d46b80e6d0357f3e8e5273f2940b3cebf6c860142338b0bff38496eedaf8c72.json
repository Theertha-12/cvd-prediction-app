{"ast":null,"code":"import api from './api';\nexport const predictCvdRisk = async data => {\n  const response = await api.post('/predict/single', data);\n  return response.data;\n};\nexport const getPredictionHistory = async (limit = 10) => {\n  const response = await api.get('/predict/history', {\n    params: {\n      limit\n    }\n  });\n  return response.data;\n};\nexport const processBatchPrediction = async formData => {\n  const response = await api.post('/batch/predict-csv', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return response.data;\n};\nexport const savePredictionResult = async predictionId => {\n  const response = await api.post(`/predict/save/${predictionId}`);\n  return response.data;\n};\nexport const downloadPredictionReport = async predictionId => {\n  const response = await api.get(`/predict/report/${predictionId}`, {\n    responseType: 'blob'\n  });\n  return response.data;\n};","map":{"version":3,"names":["api","predictCvdRisk","data","response","post","getPredictionHistory","limit","get","params","processBatchPrediction","formData","headers","savePredictionResult","predictionId","downloadPredictionReport","responseType"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/services/predict.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const predictCvdRisk = async (data) => {\r\n  const response = await api.post('/predict/single', data);\r\n  return response.data;\r\n};\r\n\r\nexport const getPredictionHistory = async (limit = 10) => {\r\n  const response = await api.get('/predict/history', { params: { limit } });\r\n  return response.data;\r\n};\r\n\r\nexport const processBatchPrediction = async (formData) => {\r\n  const response = await api.post('/batch/predict-csv', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const savePredictionResult = async (predictionId) => {\r\n  const response = await api.post(`/predict/save/${predictionId}`);\r\n  return response.data;\r\n};\r\n\r\nexport const downloadPredictionReport = async (predictionId) => {\r\n  const response = await api.get(`/predict/report/${predictionId}`, {\r\n    responseType: 'blob'\r\n  });\r\n  return response.data;\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,cAAc,GAAG,MAAOC,IAAI,IAAK;EAC5C,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,iBAAiB,EAAEF,IAAI,CAAC;EACxD,OAAOC,QAAQ,CAACD,IAAI;AACtB,CAAC;AAED,OAAO,MAAMG,oBAAoB,GAAG,MAAAA,CAAOC,KAAK,GAAG,EAAE,KAAK;EACxD,MAAMH,QAAQ,GAAG,MAAMH,GAAG,CAACO,GAAG,CAAC,kBAAkB,EAAE;IAAEC,MAAM,EAAE;MAAEF;IAAM;EAAE,CAAC,CAAC;EACzE,OAAOH,QAAQ,CAACD,IAAI;AACtB,CAAC;AAED,OAAO,MAAMO,sBAAsB,GAAG,MAAOC,QAAQ,IAAK;EACxD,MAAMP,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,oBAAoB,EAAEM,QAAQ,EAAE;IAC9DC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EACF,OAAOR,QAAQ,CAACD,IAAI;AACtB,CAAC;AAED,OAAO,MAAMU,oBAAoB,GAAG,MAAOC,YAAY,IAAK;EAC1D,MAAMV,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,iBAAiBS,YAAY,EAAE,CAAC;EAChE,OAAOV,QAAQ,CAACD,IAAI;AACtB,CAAC;AAED,OAAO,MAAMY,wBAAwB,GAAG,MAAOD,YAAY,IAAK;EAC9D,MAAMV,QAAQ,GAAG,MAAMH,GAAG,CAACO,GAAG,CAAC,mBAAmBM,YAAY,EAAE,EAAE;IAChEE,YAAY,EAAE;EAChB,CAAC,CAAC;EACF,OAAOZ,QAAQ,CAACD,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}