{"ast":null,"code":"import api from './api';\nexport const getDashboardData = async userRole => {\n  try {\n    const endpoint = userRole === 'doctor' ? '/dashboard/doctor' : '/dashboard/patient';\n    console.log(`ðŸ“Š Calling dashboard endpoint: ${endpoint}`);\n    const response = await api.get(endpoint);\n    console.log('ðŸ“Š Dashboard API response:', response.data);\n\n    // Validate response structure\n    if (!response.data) {\n      throw new Error('No data received from server');\n    }\n\n    // Ensure required fields exist\n    const data = {\n      user_info: response.data.user_info || {},\n      statistics: response.data.statistics || {\n        total_predictions: 0,\n        recent_predictions: 0,\n        recent_activity: 0,\n        total_patients: userRole === 'doctor' ? 0 : null,\n        risk_distribution: {\n          High: 0,\n          Moderate: 0,\n          Low: 0\n        }\n      },\n      latest_prediction: response.data.latest_prediction || null,\n      recent_predictions: response.data.recent_predictions || [],\n      recent_activities: response.data.recent_activities || []\n    };\n    return data;\n  } catch (error) {\n    var _error$response, _error$response2, _error$response3, _error$config, _error$response4, _error$response5, _error$response6, _error$response7, _error$response8;\n    console.error('Dashboard data error:', {\n      message: error.message,\n      status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n      statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n      data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data,\n      url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url\n    });\n\n    // Create a more specific error message\n    let errorMessage = 'Failed to fetch dashboard data';\n    if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 500) {\n      errorMessage = 'Server error - please try again later';\n    } else if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 404) {\n      errorMessage = 'Dashboard endpoint not found';\n    } else if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 401) {\n      errorMessage = 'Authentication required';\n    } else if (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status) === 403) {\n      errorMessage = 'Access denied';\n    } else if (!error.response) {\n      errorMessage = 'Network error - check your connection';\n    }\n\n    // Throw with enhanced error info\n    const enhancedError = new Error(errorMessage);\n    enhancedError.originalError = error;\n    enhancedError.status = (_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.status;\n    throw enhancedError;\n  }\n};","map":{"version":3,"names":["api","getDashboardData","userRole","endpoint","console","log","response","get","data","Error","user_info","statistics","total_predictions","recent_predictions","recent_activity","total_patients","risk_distribution","High","Moderate","Low","latest_prediction","recent_activities","error","_error$response","_error$response2","_error$response3","_error$config","_error$response4","_error$response5","_error$response6","_error$response7","_error$response8","message","status","statusText","url","config","errorMessage","enhancedError","originalError"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/services/dashboard.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const getDashboardData = async (userRole) => {\r\n  try {\r\n    const endpoint = userRole === 'doctor' ? '/dashboard/doctor' : '/dashboard/patient';\r\n    console.log(`ðŸ“Š Calling dashboard endpoint: ${endpoint}`);\r\n    \r\n    const response = await api.get(endpoint);\r\n    console.log('ðŸ“Š Dashboard API response:', response.data);\r\n    \r\n    // Validate response structure\r\n    if (!response.data) {\r\n      throw new Error('No data received from server');\r\n    }\r\n\r\n    // Ensure required fields exist\r\n    const data = {\r\n      user_info: response.data.user_info || {},\r\n      statistics: response.data.statistics || {\r\n        total_predictions: 0,\r\n        recent_predictions: 0,\r\n        recent_activity: 0,\r\n        total_patients: userRole === 'doctor' ? 0 : null,\r\n        risk_distribution: { High: 0, Moderate: 0, Low: 0 }\r\n      },\r\n      latest_prediction: response.data.latest_prediction || null,\r\n      recent_predictions: response.data.recent_predictions || [],\r\n      recent_activities: response.data.recent_activities || []\r\n    };\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Dashboard data error:', {\r\n      message: error.message,\r\n      status: error.response?.status,\r\n      statusText: error.response?.statusText,\r\n      data: error.response?.data,\r\n      url: error.config?.url\r\n    });\r\n\r\n    // Create a more specific error message\r\n    let errorMessage = 'Failed to fetch dashboard data';\r\n    if (error.response?.status === 500) {\r\n      errorMessage = 'Server error - please try again later';\r\n    } else if (error.response?.status === 404) {\r\n      errorMessage = 'Dashboard endpoint not found';\r\n    } else if (error.response?.status === 401) {\r\n      errorMessage = 'Authentication required';\r\n    } else if (error.response?.status === 403) {\r\n      errorMessage = 'Access denied';\r\n    } else if (!error.response) {\r\n      errorMessage = 'Network error - check your connection';\r\n    }\r\n\r\n    // Throw with enhanced error info\r\n    const enhancedError = new Error(errorMessage);\r\n    enhancedError.originalError = error;\r\n    enhancedError.status = error.response?.status;\r\n    throw enhancedError;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}