{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\cvd-risk-project\\\\frontend\\\\cvd-risk-frontend\\\\src\\\\components\\\\batch\\\\FileUploader.jsx\",\n  _s = $RefreshSig$();\n// src/components/batch/FileUploader.jsx\nimport React, { useState } from \"react\";\nimport api from \"../../api/axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploader = ({\n  onResults\n}) => {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleFileChange = async e => {\n    setError(\"\");\n    const file = e.target.files[0];\n    if (!file) return;\n    if (!file.name.endsWith(\".csv\")) {\n      setError(\"Please upload a CSV file.\");\n      return;\n    }\n    setUploading(true);\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const response = await api.post(\"/predict/batch\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      onResults(response.data.batch_results || []);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || err.message || \"Failed to process batch\");\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2 font-semibold\",\n      children: \"Upload Patients CSV for Batch Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), uploading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-blue-600\",\n      children: \"Uploading and processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-red-600\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploader, \"Aow4yDQbOrd+WRLMpO9os3x6CLI=\");\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","FileUploader","onResults","_s","uploading","setUploading","error","setError","handleFileChange","e","file","target","files","name","endsWith","formData","FormData","append","response","post","headers","data","batch_results","err","_err$response","_err$response$data","detail","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/components/batch/FileUploader.jsx"],"sourcesContent":["// src/components/batch/FileUploader.jsx\r\nimport React, { useState } from \"react\";\r\nimport api from \"../../api/axios\";\r\n\r\nconst FileUploader = ({ onResults }) => {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleFileChange = async (e) => {\r\n    setError(\"\");\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    if (!file.name.endsWith(\".csv\")) {\r\n      setError(\"Please upload a CSV file.\");\r\n      return;\r\n    }\r\n    setUploading(true);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      const response = await api.post(\"/predict/batch\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      onResults(response.data.batch_results || []);\r\n    } catch (err) {\r\n      setError(err.response?.data?.detail || err.message || \"Failed to process batch\");\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label className=\"block mb-2 font-semibold\">Upload Patients CSV for Batch Prediction</label>\r\n      <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\r\n      {uploading && <p className=\"mt-2 text-blue-600\">Uploading and processing...</p>}\r\n      {error && <p className=\"mt-2 text-red-600\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploader;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpCF,QAAQ,CAAC,EAAE,CAAC;IACZ,MAAMG,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACF,IAAI,EAAE;IACX,IAAI,CAACA,IAAI,CAACG,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;MAC/BP,QAAQ,CAAC,2BAA2B,CAAC;MACrC;IACF;IACAF,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMU,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,CAAC;MAC7B,MAAMQ,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,IAAI,CAAC,gBAAgB,EAAEJ,QAAQ,EAAE;QAC1DK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MACFlB,SAAS,CAACgB,QAAQ,CAACG,IAAI,CAACC,aAAa,IAAI,EAAE,CAAC;IAC9C,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZlB,QAAQ,CAAC,EAAAiB,aAAA,GAAAD,GAAG,CAACL,QAAQ,cAAAM,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcH,IAAI,cAAAI,kBAAA,uBAAlBA,kBAAA,CAAoBC,MAAM,KAAIH,GAAG,CAACI,OAAO,IAAI,yBAAyB,CAAC;IAClF,CAAC,SAAS;MACRtB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEL,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAO6B,SAAS,EAAC,0BAA0B;MAAAD,QAAA,EAAC;IAAwC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5FjC,OAAA;MAAOkC,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAE5B;IAAiB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9D7B,SAAS,iBAAIJ,OAAA;MAAG6B,SAAS,EAAC,oBAAoB;MAAAD,QAAA,EAAC;IAA2B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC9E3B,KAAK,iBAAIN,OAAA;MAAG6B,SAAS,EAAC,mBAAmB;MAAAD,QAAA,EAAEtB;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAnCIF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAqClB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}