{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\cvd-risk-project\\\\frontend\\\\cvd-risk-frontend\\\\src\\\\components\\\\chat\\\\ChatInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport { useChat } from '../../context/ChatContext';\nimport { useAppContext } from '../../context/AppContext';\nimport MessageBubble from './MessageBubble';\nimport { sendChatMessage, getChatHistory } from '../../services/chat';\nimport { PaperAirplaneIcon, ArrowPathIcon } from '@heroicons/react/24/outline';\nimport PatientChatMenu from './PatientChatMenu';\nimport DoctorChatMenu from './DoctorChatMenu';\nimport { isValidSessionId } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  sessionId,\n  onNewChat\n}) => {\n  _s();\n  var _currentPrediction$ke;\n  const {\n    user\n  } = useAuth();\n  const {\n    currentPrediction\n  } = useChat();\n  const {\n    getChatHistory: getStoredHistory,\n    addToChatHistory: saveToHistory,\n    clearChatHistory: clearStoredHistory\n  } = useAppContext();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSending, setIsSending] = useState(false);\n  const [sessionError, setSessionError] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Validate session ID when it changes\n  useEffect(() => {\n    if (sessionId && !isValidSessionId(sessionId)) {\n      setSessionError('Invalid session ID provided');\n      console.error('Invalid session ID:', sessionId);\n      return;\n    }\n    setSessionError(null);\n  }, [sessionId]);\n\n  // ENHANCED: Load messages with better persistence\n  useEffect(() => {\n    const fetchHistory = async () => {\n      if (!sessionId || !isValidSessionId(sessionId)) {\n        setIsLoading(false);\n        setMessages([]);\n        return;\n      }\n      setIsLoading(true);\n      try {\n        // First try to get from local storage (immediate load)\n        const storedHistory = getStoredHistory(sessionId);\n        if (storedHistory && storedHistory.length > 0) {\n          setMessages(storedHistory);\n          console.log(`📝 Loaded ${storedHistory.length} messages from local storage`);\n        }\n\n        // Then try to get from server (for sync)\n        try {\n          const serverHistory = await getChatHistory(sessionId);\n          if (serverHistory && Array.isArray(serverHistory) && serverHistory.length > 0) {\n            // Merge server history with local storage\n            const mergedHistory = mergeHistories(storedHistory, serverHistory);\n            setMessages(mergedHistory);\n\n            // Update local storage with merged history\n            clearStoredHistory(sessionId);\n            mergedHistory.forEach(msg => saveToHistory(sessionId, msg));\n            console.log(`📝 Synced ${mergedHistory.length} messages from server`);\n          }\n        } catch (serverError) {\n          console.log('Server history unavailable, using local storage only');\n        }\n      } catch (error) {\n        console.error('Failed to load chat history:', error);\n        setMessages([]);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchHistory();\n  }, [sessionId, getStoredHistory, saveToHistory, clearStoredHistory]);\n\n  // Helper function to merge histories without duplicates\n  const mergeHistories = (local, server) => {\n    const merged = [...(local || [])];\n    const localIds = new Set(merged.map(msg => msg.id || msg.created_at));\n    server.forEach(msg => {\n      const msgId = msg.id || msg.created_at;\n      if (!localIds.has(msgId)) {\n        merged.push(msg);\n      }\n    });\n\n    // Sort by timestamp\n    return merged.sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // ENHANCED: Better message handling with persistence\n  const handleSendMessage = async (text = null) => {\n    const messageToSend = text || inputMessage;\n    if (!messageToSend.trim() || isSending) return;\n\n    // Validation checks\n    if (!sessionId || !isValidSessionId(sessionId)) {\n      console.error('Cannot send message: Invalid session ID');\n      setSessionError('Session not available. Please refresh the page.');\n      return;\n    }\n    const userMessage = {\n      id: Date.now() + Math.random(),\n      // Add unique ID\n      message: messageToSend,\n      session_id: sessionId,\n      source: 'user',\n      created_at: new Date().toISOString()\n    };\n\n    // Add to UI immediately\n    setMessages(prev => {\n      const updated = [...prev, userMessage];\n      // Persist to storage immediately\n      saveToHistory(sessionId, userMessage);\n      return updated;\n    });\n    if (!text) setInputMessage('');\n    setIsSending(true);\n    try {\n      // Include prediction context for doctors\n      const predictionContext = (user === null || user === void 0 ? void 0 : user.role) === 'doctor' && currentPrediction ? {\n        patientId: currentPrediction.patientId,\n        riskScore: currentPrediction.riskScore,\n        riskCategory: currentPrediction.riskCategory,\n        keyFactors: currentPrediction.keyFactors\n      } : null;\n      console.log('Sending message with sessionId:', sessionId);\n      console.log('Prediction context:', predictionContext);\n      const aiResponse = await sendChatMessage(messageToSend, sessionId, predictionContext);\n      const assistantMessage = {\n        id: Date.now() + Math.random(),\n        message: aiResponse.response || aiResponse.message,\n        session_id: sessionId,\n        source: 'ai',\n        created_at: new Date().toISOString(),\n        personalized: aiResponse.personalized\n      };\n\n      // Add to UI and persist\n      setMessages(prev => {\n        const updated = [...prev, assistantMessage];\n        saveToHistory(sessionId, assistantMessage);\n        return updated;\n      });\n    } catch (error) {\n      var _error$response;\n      console.error('Failed to send message:', error);\n\n      // Show specific error message based on error type\n      let errorMessage = \"I'm having trouble responding right now. Please try again later.\";\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 422) {\n        errorMessage = \"There was an issue with your request. Please refresh the page and try again.\";\n      }\n      const errorMsg = {\n        id: Date.now() + Math.random(),\n        message: errorMessage,\n        session_id: sessionId,\n        source: 'ai',\n        created_at: new Date().toISOString(),\n        isError: true\n      };\n      setMessages(prev => {\n        const updated = [...prev, errorMsg];\n        saveToHistory(sessionId, errorMsg);\n        return updated;\n      });\n    } finally {\n      setIsSending(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // ENHANCED: Reset current chat only (not all chats)\n  const resetCurrentChat = () => {\n    setMessages([]);\n    setInputMessage('');\n    clearStoredHistory(sessionId);\n  };\n\n  // Show error state if session is invalid\n  if (sessionError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500 text-6xl mb-4\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 mb-2\",\n          children: \"Session Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-4\",\n          children: sessionError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          className: \"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\",\n          children: \"Refresh Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show loading state if no session ID yet\n  if (!sessionId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-blue-500 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Initializing chat...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gradient-to-r from-blue-600 to-blue-700 text-white p-4 rounded-t-xl\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold\",\n            children: \"Cardio Health Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs opacity-80 mt-1\",\n            children: (user === null || user === void 0 ? void 0 : user.role) === 'patient' ? \"Personalized advice based on your risk profile\" : \"Clinical decision support system\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1 text-xs opacity-70\",\n            children: messages.length > 0 && `💬 ${messages.length} messages • Auto-saved`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), (user === null || user === void 0 ? void 0 : user.role) === 'doctor' && currentPrediction && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 text-xs bg-white/10 p-2 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium\",\n              children: \"Current Patient Context:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Risk: \", currentPrediction.riskCategory, \" (\", Math.round((currentPrediction.riskScore || 0) * 100), \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Key Factors: \", (_currentPrediction$ke = currentPrediction.keyFactors) === null || _currentPrediction$ke === void 0 ? void 0 : _currentPrediction$ke.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"flex items-center text-sm bg-white/20 hover:bg-white/30 px-3 py-1 rounded-lg transition-colors\",\n            onClick: resetCurrentChat,\n            title: \"Clear current conversation only\",\n            children: [/*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n              className: \"h-4 w-4 mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), \"Clear\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), onNewChat && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"flex items-center text-sm bg-white/20 hover:bg-white/30 px-3 py-1 rounded-lg transition-colors\",\n            onClick: onNewChat,\n            title: \"Start completely new chat (resets patient selection)\",\n            children: \"New Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto p-4 bg-gray-50\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-blue-500 mx-auto mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: \"Loading conversation...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this) : messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center h-full text-center text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-200 border-2 border-dashed rounded-xl w-16 h-16 mb-4 flex items-center justify-center\",\n          children: \"\\uD83D\\uDCAC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium mb-2\",\n          children: \"Start a conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"max-w-md\",\n          children: (user === null || user === void 0 ? void 0 : user.role) === 'doctor' ? \"Use the clinical tools below or type your medical query. Your conversations are automatically saved.\" : \"Select your current health status to get personalized advice. Your chat history is preserved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n          message: msg,\n          isUser: msg.source === 'user'\n        }, msg.id || `${sessionId}-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), (user === null || user === void 0 ? void 0 : user.role) === 'patient' && /*#__PURE__*/_jsxDEV(PatientChatMenu, {\n      onSelectQuestion: handleSendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }, this), (user === null || user === void 0 ? void 0 : user.role) === 'doctor' && /*#__PURE__*/_jsxDEV(DoctorChatMenu, {\n      onSelectAction: handleSendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }, this), (user === null || user === void 0 ? void 0 : user.role) === 'doctor' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-white border-t\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-end space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          onKeyDown: handleKeyPress,\n          placeholder: \"Type your message here...\",\n          className: \"flex-grow px-4 py-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500 resize-none\",\n          rows: 1,\n          disabled: isSending\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSendMessage(),\n          disabled: !inputMessage.trim() || isSending,\n          className: \"p-3 bg-gradient-to-r from-blue-600 to-blue-500 text-white rounded-lg hover:from-blue-700 hover:to-blue-600 transition-all disabled:opacity-50\",\n          children: /*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500 mt-2\",\n        children: \"Clinical mode: Responses include technical medical guidance \\u2022 Messages auto-saved\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }, this), (user === null || user === void 0 ? void 0 : user.role) === 'patient' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3 bg-blue-50 border-t border-blue-100 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-blue-700\",\n        children: \"Responses are in simple, easy-to-understand language \\u2022 Conversation saved automatically\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"ykGn07js9E6mZUI3DBYhre8BThc=\", false, function () {\n  return [useAuth, useChat, useAppContext];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","useChat","useAppContext","MessageBubble","sendChatMessage","getChatHistory","PaperAirplaneIcon","ArrowPathIcon","PatientChatMenu","DoctorChatMenu","isValidSessionId","jsxDEV","_jsxDEV","ChatInterface","sessionId","onNewChat","_s","_currentPrediction$ke","user","currentPrediction","getStoredHistory","addToChatHistory","saveToHistory","clearChatHistory","clearStoredHistory","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","isSending","setIsSending","sessionError","setSessionError","messagesEndRef","console","error","fetchHistory","storedHistory","length","log","serverHistory","Array","isArray","mergedHistory","mergeHistories","forEach","msg","serverError","local","server","merged","localIds","Set","map","id","created_at","msgId","has","push","sort","a","b","Date","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","text","messageToSend","trim","userMessage","now","Math","random","message","session_id","source","toISOString","prev","updated","predictionContext","role","patientId","riskScore","riskCategory","keyFactors","aiResponse","assistantMessage","response","personalized","_error$response","errorMessage","status","errorMsg","isError","handleKeyPress","e","key","shiftKey","preventDefault","resetCurrentChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","round","join","title","index","isUser","ref","onSelectQuestion","onSelectAction","value","onChange","target","onKeyDown","placeholder","rows","disabled","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/components/chat/ChatInterface.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { useChat } from '../../context/ChatContext';\r\nimport { useAppContext } from '../../context/AppContext';\r\nimport MessageBubble from './MessageBubble';\r\nimport { sendChatMessage, getChatHistory } from '../../services/chat';\r\nimport { PaperAirplaneIcon, ArrowPathIcon } from '@heroicons/react/24/outline';\r\nimport PatientChatMenu from './PatientChatMenu';\r\nimport DoctorChatMenu from './DoctorChatMenu';\r\nimport { isValidSessionId } from '../../utils/helpers';\r\n\r\nconst ChatInterface = ({ sessionId, onNewChat }) => {\r\n  const { user } = useAuth();\r\n  const { currentPrediction } = useChat();\r\n  const { \r\n    getChatHistory: getStoredHistory,\r\n    addToChatHistory: saveToHistory,\r\n    clearChatHistory: clearStoredHistory\r\n  } = useAppContext();\r\n  \r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [sessionError, setSessionError] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Validate session ID when it changes\r\n  useEffect(() => {\r\n    if (sessionId && !isValidSessionId(sessionId)) {\r\n      setSessionError('Invalid session ID provided');\r\n      console.error('Invalid session ID:', sessionId);\r\n      return;\r\n    }\r\n    setSessionError(null);\r\n  }, [sessionId]);\r\n\r\n  // ENHANCED: Load messages with better persistence\r\n  useEffect(() => {\r\n    const fetchHistory = async () => {\r\n      if (!sessionId || !isValidSessionId(sessionId)) {\r\n        setIsLoading(false);\r\n        setMessages([]);\r\n        return;\r\n      }\r\n\r\n      setIsLoading(true);\r\n      try {\r\n        // First try to get from local storage (immediate load)\r\n        const storedHistory = getStoredHistory(sessionId);\r\n        if (storedHistory && storedHistory.length > 0) {\r\n          setMessages(storedHistory);\r\n          console.log(`📝 Loaded ${storedHistory.length} messages from local storage`);\r\n        }\r\n\r\n        // Then try to get from server (for sync)\r\n        try {\r\n          const serverHistory = await getChatHistory(sessionId);\r\n          if (serverHistory && Array.isArray(serverHistory) && serverHistory.length > 0) {\r\n            // Merge server history with local storage\r\n            const mergedHistory = mergeHistories(storedHistory, serverHistory);\r\n            setMessages(mergedHistory);\r\n            \r\n            // Update local storage with merged history\r\n            clearStoredHistory(sessionId);\r\n            mergedHistory.forEach(msg => saveToHistory(sessionId, msg));\r\n            \r\n            console.log(`📝 Synced ${mergedHistory.length} messages from server`);\r\n          }\r\n        } catch (serverError) {\r\n          console.log('Server history unavailable, using local storage only');\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load chat history:', error);\r\n        setMessages([]);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchHistory();\r\n  }, [sessionId, getStoredHistory, saveToHistory, clearStoredHistory]);\r\n\r\n  // Helper function to merge histories without duplicates\r\n  const mergeHistories = (local, server) => {\r\n    const merged = [...(local || [])];\r\n    const localIds = new Set(merged.map(msg => msg.id || msg.created_at));\r\n    \r\n    server.forEach(msg => {\r\n      const msgId = msg.id || msg.created_at;\r\n      if (!localIds.has(msgId)) {\r\n        merged.push(msg);\r\n      }\r\n    });\r\n    \r\n    // Sort by timestamp\r\n    return merged.sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // ENHANCED: Better message handling with persistence\r\n  const handleSendMessage = async (text = null) => {\r\n    const messageToSend = text || inputMessage;\r\n    if (!messageToSend.trim() || isSending) return;\r\n\r\n    // Validation checks\r\n    if (!sessionId || !isValidSessionId(sessionId)) {\r\n      console.error('Cannot send message: Invalid session ID');\r\n      setSessionError('Session not available. Please refresh the page.');\r\n      return;\r\n    }\r\n\r\n    const userMessage = {\r\n      id: Date.now() + Math.random(), // Add unique ID\r\n      message: messageToSend,\r\n      session_id: sessionId,\r\n      source: 'user',\r\n      created_at: new Date().toISOString()\r\n    };\r\n\r\n    // Add to UI immediately\r\n    setMessages(prev => {\r\n      const updated = [...prev, userMessage];\r\n      // Persist to storage immediately\r\n      saveToHistory(sessionId, userMessage);\r\n      return updated;\r\n    });\r\n    \r\n    if (!text) setInputMessage('');\r\n\r\n    setIsSending(true);\r\n    try {\r\n      // Include prediction context for doctors\r\n      const predictionContext = user?.role === 'doctor' && currentPrediction \r\n        ? {\r\n            patientId: currentPrediction.patientId,\r\n            riskScore: currentPrediction.riskScore,\r\n            riskCategory: currentPrediction.riskCategory,\r\n            keyFactors: currentPrediction.keyFactors\r\n          }\r\n        : null;\r\n\r\n      console.log('Sending message with sessionId:', sessionId);\r\n      console.log('Prediction context:', predictionContext);\r\n\r\n      const aiResponse = await sendChatMessage(\r\n        messageToSend, \r\n        sessionId,\r\n        predictionContext\r\n      );\r\n      \r\n      const assistantMessage = {\r\n        id: Date.now() + Math.random(),\r\n        message: aiResponse.response || aiResponse.message,\r\n        session_id: sessionId,\r\n        source: 'ai',\r\n        created_at: new Date().toISOString(),\r\n        personalized: aiResponse.personalized\r\n      };\r\n\r\n      // Add to UI and persist\r\n      setMessages(prev => {\r\n        const updated = [...prev, assistantMessage];\r\n        saveToHistory(sessionId, assistantMessage);\r\n        return updated;\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Failed to send message:', error);\r\n      \r\n      // Show specific error message based on error type\r\n      let errorMessage = \"I'm having trouble responding right now. Please try again later.\";\r\n      if (error.response?.status === 422) {\r\n        errorMessage = \"There was an issue with your request. Please refresh the page and try again.\";\r\n      }\r\n      \r\n      const errorMsg = {\r\n        id: Date.now() + Math.random(),\r\n        message: errorMessage,\r\n        session_id: sessionId,\r\n        source: 'ai',\r\n        created_at: new Date().toISOString(),\r\n        isError: true\r\n      };\r\n\r\n      setMessages(prev => {\r\n        const updated = [...prev, errorMsg];\r\n        saveToHistory(sessionId, errorMsg);\r\n        return updated;\r\n      });\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  // ENHANCED: Reset current chat only (not all chats)\r\n  const resetCurrentChat = () => {\r\n    setMessages([]);\r\n    setInputMessage('');\r\n    clearStoredHistory(sessionId);\r\n  };\r\n\r\n  // Show error state if session is invalid\r\n  if (sessionError) {\r\n    return (\r\n      <div className=\"flex flex-col h-full items-center justify-center\">\r\n        <div className=\"text-center p-8\">\r\n          <div className=\"text-red-500 text-6xl mb-4\">⚠️</div>\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Session Error</h3>\r\n          <p className=\"text-gray-600 mb-4\">{sessionError}</p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n          >\r\n            Refresh Page\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show loading state if no session ID yet\r\n  if (!sessionId) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-full\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-blue-500 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Initializing chat...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full\">\r\n      {/* Updated Header with Persistence Status */}\r\n      <div className=\"bg-gradient-to-r from-blue-600 to-blue-700 text-white p-4 rounded-t-xl\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <div>\r\n            <h2 className=\"text-xl font-semibold\">Cardio Health Assistant</h2>\r\n            <p className=\"text-xs opacity-80 mt-1\">\r\n              {user?.role === 'patient' \r\n                ? \"Personalized advice based on your risk profile\" \r\n                : \"Clinical decision support system\"}\r\n            </p>\r\n            \r\n            {/* Show message count and persistence status */}\r\n            <div className=\"mt-1 text-xs opacity-70\">\r\n              {messages.length > 0 && `💬 ${messages.length} messages • Auto-saved`}\r\n            </div>\r\n            \r\n            {/* Show prediction context for doctors */}\r\n            {user?.role === 'doctor' && currentPrediction && (\r\n              <div className=\"mt-2 text-xs bg-white/10 p-2 rounded\">\r\n                <div className=\"font-medium\">Current Patient Context:</div>\r\n                <div>Risk: {currentPrediction.riskCategory} ({Math.round((currentPrediction.riskScore || 0) * 100)}%)</div>\r\n                <div>Key Factors: {currentPrediction.keyFactors?.join(', ')}</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"flex space-x-2\">\r\n            <button\r\n              className=\"flex items-center text-sm bg-white/20 hover:bg-white/30 px-3 py-1 rounded-lg transition-colors\"\r\n              onClick={resetCurrentChat}\r\n              title=\"Clear current conversation only\"\r\n            >\r\n              <ArrowPathIcon className=\"h-4 w-4 mr-1\" />\r\n              Clear\r\n            </button>\r\n            \r\n            {onNewChat && (\r\n              <button\r\n                className=\"flex items-center text-sm bg-white/20 hover:bg-white/30 px-3 py-1 rounded-lg transition-colors\"\r\n                onClick={onNewChat}\r\n                title=\"Start completely new chat (resets patient selection)\"\r\n              >\r\n                New Chat\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex-grow overflow-y-auto p-4 bg-gray-50\">\r\n        {isLoading ? (\r\n          <div className=\"flex justify-center items-center h-full\">\r\n            <div className=\"text-center\">\r\n              <div className=\"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-blue-500 mx-auto mb-2\"></div>\r\n              <p className=\"text-sm text-gray-500\">Loading conversation...</p>\r\n            </div>\r\n          </div>\r\n        ) : messages.length === 0 ? (\r\n          <div className=\"flex flex-col items-center justify-center h-full text-center text-gray-500\">\r\n            <div className=\"bg-gray-200 border-2 border-dashed rounded-xl w-16 h-16 mb-4 flex items-center justify-center\">\r\n              💬\r\n            </div>\r\n            <h3 className=\"text-lg font-medium mb-2\">Start a conversation</h3>\r\n            <p className=\"max-w-md\">\r\n              {user?.role === 'doctor'\r\n                ? \"Use the clinical tools below or type your medical query. Your conversations are automatically saved.\"\r\n                : \"Select your current health status to get personalized advice. Your chat history is preserved.\"}\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            {messages.map((msg, index) => (\r\n              <MessageBubble\r\n                key={msg.id || `${sessionId}-${index}`}\r\n                message={msg}\r\n                isUser={msg.source === 'user'}\r\n              />\r\n            ))}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {user?.role === 'patient' && (\r\n        <PatientChatMenu onSelectQuestion={handleSendMessage} />\r\n      )}\r\n\r\n      {user?.role === 'doctor' && (\r\n        <DoctorChatMenu onSelectAction={handleSendMessage} />\r\n      )}\r\n\r\n      {user?.role === 'doctor' && (\r\n        <div className=\"p-4 bg-white border-t\">\r\n          <div className=\"flex items-end space-x-2\">\r\n            <textarea\r\n              value={inputMessage}\r\n              onChange={(e) => setInputMessage(e.target.value)}\r\n              onKeyDown={handleKeyPress}\r\n              placeholder=\"Type your message here...\"\r\n              className=\"flex-grow px-4 py-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500 resize-none\"\r\n              rows={1}\r\n              disabled={isSending}\r\n            />\r\n            <button\r\n              onClick={() => handleSendMessage()}\r\n              disabled={!inputMessage.trim() || isSending}\r\n              className=\"p-3 bg-gradient-to-r from-blue-600 to-blue-500 text-white rounded-lg hover:from-blue-700 hover:to-blue-600 transition-all disabled:opacity-50\"\r\n            >\r\n              <PaperAirplaneIcon className=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n          <p className=\"text-xs text-gray-500 mt-2\">\r\n            Clinical mode: Responses include technical medical guidance • Messages auto-saved\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {user?.role === 'patient' && (\r\n        <div className=\"p-3 bg-blue-50 border-t border-blue-100 text-center\">\r\n          <p className=\"text-xs text-blue-700\">\r\n            Responses are in simple, easy-to-understand language • Conversation saved automatically\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}