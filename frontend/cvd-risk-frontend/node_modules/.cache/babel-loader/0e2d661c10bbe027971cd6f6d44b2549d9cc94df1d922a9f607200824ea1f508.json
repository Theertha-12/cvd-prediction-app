{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\cvd-risk-project\\\\frontend\\\\cvd-risk-frontend\\\\src\\\\components\\\\batch\\\\BatchResults.jsx\",\n  _s = $RefreshSig$();\n// src/components/batch/BatchResults.jsx\nimport React, { useRef } from \"react\";\nimport { CSVLink } from \"react-csv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BatchResults = ({\n  results\n}) => {\n  _s();\n  const csvRef = useRef();\n  if (!results || results.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6 p-4 bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-semibold mb-4\",\n      children: \"Batch Prediction Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mb-4 px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition\",\n      onClick: () => csvRef.current.link.click(),\n      children: \"Download Results CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"w-full border-collapse border border-gray-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys(results[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border border-gray-300 px-2 py-1 text-left bg-gray-100\",\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: results.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: i % 2 === 0 ? \"bg-gray-50\" : \"\",\n          children: Object.values(row).map((val, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border border-gray-300 px-2 py-1\",\n            children: val\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n      data: results,\n      filename: \"batch_predictions.csv\",\n      className: \"hidden\",\n      ref: csvRef,\n      target: \"_blank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(BatchResults, \"Ns4h1eMFNrwdtRWi6sMRMYwAqMg=\");\n_c = BatchResults;\nexport default BatchResults;\nvar _c;\n$RefreshReg$(_c, \"BatchResults\");","map":{"version":3,"names":["React","useRef","CSVLink","jsxDEV","_jsxDEV","BatchResults","results","_s","csvRef","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","current","link","click","Object","keys","map","key","row","i","values","val","idx","data","filename","ref","target","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/components/batch/BatchResults.jsx"],"sourcesContent":["// src/components/batch/BatchResults.jsx\r\nimport React, { useRef } from \"react\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst BatchResults = ({ results }) => {\r\n  const csvRef = useRef();\r\n\r\n  if (!results || results.length === 0) return null;\r\n\r\n  return (\r\n    <div className=\"mt-6 p-4 bg-white rounded shadow\">\r\n      <h3 className=\"font-semibold mb-4\">Batch Prediction Results</h3>\r\n      <button\r\n        className=\"mb-4 px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition\"\r\n        onClick={() => csvRef.current.link.click()}\r\n      >\r\n        Download Results CSV\r\n      </button>\r\n\r\n      <table className=\"w-full border-collapse border border-gray-300\">\r\n        <thead>\r\n          <tr>\r\n            {Object.keys(results[0]).map((key) => (\r\n              <th key={key} className=\"border border-gray-300 px-2 py-1 text-left bg-gray-100\">\r\n                {key}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {results.map((row, i) => (\r\n            <tr key={i} className={i % 2 === 0 ? \"bg-gray-50\" : \"\"}>\r\n              {Object.values(row).map((val, idx) => (\r\n                <td key={idx} className=\"border border-gray-300 px-2 py-1\">\r\n                  {val}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <CSVLink\r\n        data={results}\r\n        filename=\"batch_predictions.csv\"\r\n        className=\"hidden\"\r\n        ref={csvRef}\r\n        target=\"_blank\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BatchResults;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,MAAM,GAAGP,MAAM,CAAC,CAAC;EAEvB,IAAI,CAACK,OAAO,IAAIA,OAAO,CAACG,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;EAEjD,oBACEL,OAAA;IAAKM,SAAS,EAAC,kCAAkC;IAAAC,QAAA,gBAC/CP,OAAA;MAAIM,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChEX,OAAA;MACEM,SAAS,EAAC,8EAA8E;MACxFM,OAAO,EAAEA,CAAA,KAAMR,MAAM,CAACS,OAAO,CAACC,IAAI,CAACC,KAAK,CAAC,CAAE;MAAAR,QAAA,EAC5C;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETX,OAAA;MAAOM,SAAS,EAAC,+CAA+C;MAAAC,QAAA,gBAC9DP,OAAA;QAAAO,QAAA,eACEP,OAAA;UAAAO,QAAA,EACGS,MAAM,CAACC,IAAI,CAACf,OAAO,CAAC,CAAC,CAAC,CAAC,CAACgB,GAAG,CAAEC,GAAG,iBAC/BnB,OAAA;YAAcM,SAAS,EAAC,wDAAwD;YAAAC,QAAA,EAC7EY;UAAG,GADGA,GAAG;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAER,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRX,OAAA;QAAAO,QAAA,EACGL,OAAO,CAACgB,GAAG,CAAC,CAACE,GAAG,EAAEC,CAAC,kBAClBrB,OAAA;UAAYM,SAAS,EAAEe,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,YAAY,GAAG,EAAG;UAAAd,QAAA,EACpDS,MAAM,CAACM,MAAM,CAACF,GAAG,CAAC,CAACF,GAAG,CAAC,CAACK,GAAG,EAAEC,GAAG,kBAC/BxB,OAAA;YAAcM,SAAS,EAAC,kCAAkC;YAAAC,QAAA,EACvDgB;UAAG,GADGC,GAAG;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAER,CACL;QAAC,GALKU,CAAC;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMN,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACRX,OAAA,CAACF,OAAO;MACN2B,IAAI,EAAEvB,OAAQ;MACdwB,QAAQ,EAAC,uBAAuB;MAChCpB,SAAS,EAAC,QAAQ;MAClBqB,GAAG,EAAEvB,MAAO;MACZwB,MAAM,EAAC;IAAQ;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACR,EAAA,CA9CIF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAgDlB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}