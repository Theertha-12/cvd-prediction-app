{"ast":null,"code":"// src/api/axios.js\nimport axios from 'axios';\n\n// Get base URL from environment variables\n// IMPORTANT: This should point to your backend's base URL (e.g., http://localhost:8000)\n// The /api prefix for specific routers is handled in main.py, so don't include it here unless all your routes start with it.\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add the JWT token to headers\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token'); // Get token from localStorage\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for global error handling (optional, but good practice)\napi.interceptors.response.use(response => response, error => {\n  // Handle specific error codes here\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        console.error(\"Unauthorized: Please log in again.\");\n        // Optional: Redirect to login page\n        // window.location.href = '/login';\n        break;\n      case 403:\n        console.error(\"Forbidden: You don't have permission to access this resource.\");\n        break;\n      case 404:\n        console.error(\"Not Found: The requested resource could not be found.\");\n        break;\n      case 422:\n        console.error(\"Unprocessable Entity: Validation error.\", error.response.data);\n        break;\n      case 500:\n        console.error(\"Server Error: Something went wrong on the server.\");\n        break;\n      default:\n        console.error(`API Error ${error.response.status}:`, error.response.data);\n    }\n  } else if (error.request) {\n    console.error(\"No response received from server:\", error.request);\n  } else {\n    console.error(\"Error setting up request:\", error.message);\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","console","data","message"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/api/axios.js"],"sourcesContent":["// src/api/axios.js\r\nimport axios from 'axios';\r\n\r\n// Get base URL from environment variables\r\n// IMPORTANT: This should point to your backend's base URL (e.g., http://localhost:8000)\r\n// The /api prefix for specific routers is handled in main.py, so don't include it here unless all your routes start with it.\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add the JWT token to headers\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token'); // Get token from localStorage\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for global error handling (optional, but good practice)\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    // Handle specific error codes here\r\n    if (error.response) {\r\n      switch (error.response.status) {\r\n        case 401:\r\n          console.error(\"Unauthorized: Please log in again.\");\r\n          // Optional: Redirect to login page\r\n          // window.location.href = '/login';\r\n          break;\r\n        case 403:\r\n          console.error(\"Forbidden: You don't have permission to access this resource.\");\r\n          break;\r\n        case 404:\r\n          console.error(\"Not Found: The requested resource could not be found.\");\r\n          break;\r\n        case 422:\r\n          console.error(\"Unprocessable Entity: Validation error.\", error.response.data);\r\n          break;\r\n        case 500:\r\n          console.error(\"Server Error: Something went wrong on the server.\");\r\n          break;\r\n        default:\r\n          console.error(`API Error ${error.response.status}:`, error.response.data);\r\n      }\r\n    } else if (error.request) {\r\n      console.error(\"No response received from server:\", error.request);\r\n    } else {\r\n      console.error(\"Error setting up request:\", error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;AAElF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT;EACA,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB,QAAQH,KAAK,CAACG,QAAQ,CAACC,MAAM;MAC3B,KAAK,GAAG;QACNC,OAAO,CAACL,KAAK,CAAC,oCAAoC,CAAC;QACnD;QACA;QACA;MACF,KAAK,GAAG;QACNK,OAAO,CAACL,KAAK,CAAC,+DAA+D,CAAC;QAC9E;MACF,KAAK,GAAG;QACNK,OAAO,CAACL,KAAK,CAAC,uDAAuD,CAAC;QACtE;MACF,KAAK,GAAG;QACNK,OAAO,CAACL,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAACG,QAAQ,CAACG,IAAI,CAAC;QAC7E;MACF,KAAK,GAAG;QACND,OAAO,CAACL,KAAK,CAAC,mDAAmD,CAAC;QAClE;MACF;QACEK,OAAO,CAACL,KAAK,CAAC,aAAaA,KAAK,CAACG,QAAQ,CAACC,MAAM,GAAG,EAAEJ,KAAK,CAACG,QAAQ,CAACG,IAAI,CAAC;IAC7E;EACF,CAAC,MAAM,IAAIN,KAAK,CAACP,OAAO,EAAE;IACxBY,OAAO,CAACL,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAACP,OAAO,CAAC;EACnE,CAAC,MAAM;IACLY,OAAO,CAACL,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACO,OAAO,CAAC;EAC3D;EACA,OAAON,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}