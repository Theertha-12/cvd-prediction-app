{"ast":null,"code":"// Format date to readable string\nexport const formatDate = dateString => {\n  const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\n// Get risk category information\nexport const getRiskCategoryInfo = category => {\n  const categories = {\n    Low: {\n      label: 'Low Risk',\n      color: 'text-green-600',\n      bgColor: 'bg-green-100',\n      borderColor: 'border-green-300'\n    },\n    Moderate: {\n      label: 'Moderate Risk',\n      color: 'text-yellow-600',\n      bgColor: 'bg-yellow-100',\n      borderColor: 'border-yellow-300'\n    },\n    High: {\n      label: 'High Risk',\n      color: 'text-red-600',\n      bgColor: 'bg-red-100',\n      borderColor: 'border-red-300'\n    }\n  };\n  return categories[category] || categories.Low;\n};\n\n// Generate CSV content from data\nexport const generateCSV = (data, headers) => {\n  const headerRow = headers.map(h => `\"${h.label}\"`).join(',');\n  const rows = data.map(item => headers.map(h => {\n    const value = item[h.key];\n    return typeof value === 'string' ? `\"${value}\"` : value;\n  }).join(','));\n  return [headerRow, ...rows].join('\\n');\n};\n\n// Download a file\nexport const downloadFile = (content, filename, type = 'text/csv') => {\n  const blob = new Blob([content], {\n    type\n  });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = filename;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(url);\n};\n\n// Format number with commas\nexport const formatNumber = num => {\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n\n// Validate email\nexport const validateEmail = email => {\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};","map":{"version":3,"names":["formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","getRiskCategoryInfo","category","categories","Low","label","color","bgColor","borderColor","Moderate","High","generateCSV","data","headers","headerRow","map","h","join","rows","item","value","key","downloadFile","content","filename","type","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","formatNumber","num","toString","replace","validateEmail","email","re","test","String","toLowerCase"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/utils/helpers.js"],"sourcesContent":["// Format date to readable string\r\nexport const formatDate = (dateString) => {\r\n  const options = { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' };\r\n  return new Date(dateString).toLocaleDateString(undefined, options);\r\n};\r\n\r\n// Get risk category information\r\nexport const getRiskCategoryInfo = (category) => {\r\n  const categories = {\r\n    Low: {\r\n      label: 'Low Risk',\r\n      color: 'text-green-600',\r\n      bgColor: 'bg-green-100',\r\n      borderColor: 'border-green-300'\r\n    },\r\n    Moderate: {\r\n      label: 'Moderate Risk',\r\n      color: 'text-yellow-600',\r\n      bgColor: 'bg-yellow-100',\r\n      borderColor: 'border-yellow-300'\r\n    },\r\n    High: {\r\n      label: 'High Risk',\r\n      color: 'text-red-600',\r\n      bgColor: 'bg-red-100',\r\n      borderColor: 'border-red-300'\r\n    }\r\n  };\r\n  return categories[category] || categories.Low;\r\n};\r\n\r\n// Generate CSV content from data\r\nexport const generateCSV = (data, headers) => {\r\n  const headerRow = headers.map(h => `\"${h.label}\"`).join(',');\r\n  const rows = data.map(item =>\r\n    headers.map(h => {\r\n      const value = item[h.key];\r\n      return typeof value === 'string' ? `\"${value}\"` : value;\r\n    }).join(',')\r\n  );\r\n  return [headerRow, ...rows].join('\\n');\r\n};\r\n\r\n// Download a file\r\nexport const downloadFile = (content, filename, type = 'text/csv') => {\r\n  const blob = new Blob([content], { type });\r\n  const url = URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = filename;\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  URL.revokeObjectURL(url);\r\n};\r\n\r\n// Format number with commas\r\nexport const formatNumber = (num) => {\r\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n};\r\n\r\n// Validate email\r\nexport const validateEmail = (email) => {\r\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}