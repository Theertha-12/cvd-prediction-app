{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\cvd-risk-project\\\\frontend\\\\cvd-risk-frontend\\\\src\\\\components\\\\batch\\\\FileUploader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { batchPredict } from \"../../services/predict\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FileUploader({\n  onResults\n}) {\n  _s();\n  const [error, setError] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const handleFile = async e => {\n    const file = e.target.files[0];\n    setError(\"\");\n    if (!(file !== null && file !== void 0 && file.name.endsWith(\".csv\"))) {\n      setError(\"Upload a valid CSV file.\");\n      return;\n    }\n    setUploading(true);\n    try {\n      const res = await batchPredict(file);\n      onResults(res.batch_results || []);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || \"Batch prediction failed!\");\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2 font-semibold\",\n      children: \"Batch Prediction (CSV Upload)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-blue-600\",\n      children: \"Processing\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-600\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUploader, \"nQKHV4WWU0v+yItIb+9/o3XnNVo=\");\n_c = FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","batchPredict","jsxDEV","_jsxDEV","FileUploader","onResults","_s","error","setError","uploading","setUploading","handleFile","e","file","target","files","name","endsWith","res","batch_results","err","_err$response","_err$response$data","response","data","detail","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/components/batch/FileUploader.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { batchPredict } from \"../../services/predict\";\r\n\r\nexport default function FileUploader({ onResults }) {\r\n  const [error, setError] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const handleFile = async e => {\r\n    const file = e.target.files[0];\r\n    setError(\"\");\r\n    if (!file?.name.endsWith(\".csv\")) {\r\n      setError(\"Upload a valid CSV file.\");\r\n      return;\r\n    }\r\n    setUploading(true);\r\n    try {\r\n      const res = await batchPredict(file);\r\n      onResults(res.batch_results || []);\r\n    } catch (err) {\r\n      setError(err.response?.data?.detail || \"Batch prediction failed!\");\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label className=\"block mb-2 font-semibold\">Batch Prediction (CSV Upload)</label>\r\n      <input type=\"file\" accept=\".csv\" onChange={handleFile} />\r\n      {uploading && <div className=\"text-blue-600\">Processingâ€¦</div>}\r\n      {error && <div className=\"text-red-600\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,UAAU,GAAG,MAAMC,CAAC,IAAI;IAC5B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9BP,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI,EAACK,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEG,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,GAAE;MAChCT,QAAQ,CAAC,0BAA0B,CAAC;MACpC;IACF;IACAE,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMQ,GAAG,GAAG,MAAMjB,YAAY,CAACY,IAAI,CAAC;MACpCR,SAAS,CAACa,GAAG,CAACC,aAAa,IAAI,EAAE,CAAC;IACpC,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZd,QAAQ,CAAC,EAAAa,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcG,IAAI,cAAAF,kBAAA,uBAAlBA,kBAAA,CAAoBG,MAAM,KAAI,0BAA0B,CAAC;IACpE,CAAC,SAAS;MACRf,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEP,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAOwB,SAAS,EAAC,0BAA0B;MAAAD,QAAA,EAAC;IAA6B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjF5B,OAAA;MAAO6B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAEvB;IAAW;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACxDtB,SAAS,iBAAIN,OAAA;MAAKwB,SAAS,EAAC,eAAe;MAAAD,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC7DxB,KAAK,iBAAIJ,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAD,QAAA,EAAEnB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACzB,EAAA,CA9BuBF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}