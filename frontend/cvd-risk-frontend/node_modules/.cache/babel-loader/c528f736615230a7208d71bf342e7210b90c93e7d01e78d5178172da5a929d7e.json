{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\cvd-risk-project\\\\frontend\\\\cvd-risk-frontend\\\\src\\\\pages\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useAppContext } from '../context/AppContext';\nimport { useChat } from '../context/ChatContext';\nimport DashboardLayout from '../layouts/DashboardLayout';\nimport ChatInterface from '../components/chat/ChatInterface';\nimport { MessageSquare, Plus, RotateCcw } from 'lucide-react';\nimport { generateSessionId, isValidSessionId } from '../utils/helpers';\nimport { createNewChatSession, getUserChatSessions } from '../services/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    chatHistory,\n    addToChatHistory,\n    getChatHistory,\n    clearChatHistory\n  } = useAppContext();\n  const {\n    setCurrentPrediction,\n    currentPrediction\n  } = useChat();\n  const [currentSessionId, setCurrentSessionId] = useState(null);\n  const [sessions, setSessions] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Initialize chat session when component mounts\n  useEffect(() => {\n    initializeChat();\n  }, []);\n  const initializeChat = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Try to load existing sessions first\n      const userSessions = await getUserChatSessions();\n      setSessions(userSessions || []);\n\n      // Check if we have a stored active session\n      const storedSessionId = localStorage.getItem('activeSessionId');\n      if (storedSessionId && isValidSessionId(storedSessionId)) {\n        // Verify session still exists on server\n        const sessionExists = userSessions === null || userSessions === void 0 ? void 0 : userSessions.some(s => s.session_id === storedSessionId);\n        if (sessionExists) {\n          setCurrentSessionId(storedSessionId);\n          return;\n        }\n      }\n\n      // If user has existing sessions, use the most recent one\n      if (userSessions && userSessions.length > 0) {\n        const mostRecent = userSessions[0];\n        if (isValidSessionId(mostRecent.session_id)) {\n          setCurrentSessionId(mostRecent.session_id);\n          localStorage.setItem('activeSessionId', mostRecent.session_id);\n        } else {\n          // Invalid session ID, create new one\n          await createNewSession();\n        }\n      } else {\n        // No existing sessions, create a new one\n        await createNewSession();\n      }\n    } catch (error) {\n      console.error('Failed to initialize chat sessions:', error);\n      // Fallback: create a local session ID\n      const fallbackSessionId = generateSessionId();\n      setCurrentSessionId(fallbackSessionId);\n      localStorage.setItem('activeSessionId', fallbackSessionId);\n      setError('Using offline mode. Some features may be limited.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const createNewSession = async () => {\n    try {\n      const sessionName = `Chat ${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })}`;\n      const newSession = await createNewChatSession(sessionName);\n      if (newSession && newSession.session_id) {\n        setCurrentSessionId(newSession.session_id);\n        localStorage.setItem('activeSessionId', newSession.session_id);\n        setSessions(prev => [newSession, ...prev]);\n      } else {\n        throw new Error('Invalid session response');\n      }\n    } catch (error) {\n      console.error('Failed to create new session:', error);\n      // Fallback to local session\n      const fallbackSessionId = generateSessionId();\n      setCurrentSessionId(fallbackSessionId);\n      localStorage.setItem('activeSessionId', fallbackSessionId);\n      setError('Using offline mode. Messages may not be saved.');\n    }\n  };\n\n  // ENHANCED: Complete reset when starting new chat\n  const handleNewChat = async () => {\n    try {\n      // 1. Clear current prediction context (resets selected patient from batch)\n      setCurrentPrediction(null);\n\n      // 2. Clear current session history\n      if (currentSessionId) {\n        clearChatHistory(currentSessionId);\n      }\n\n      // 3. Create completely new session\n      await createNewSession();\n\n      // 4. Show success feedback\n      console.log('✅ New chat started - all context cleared');\n    } catch (error) {\n      console.error('Error starting new chat:', error);\n      setError('Failed to start new chat. Please try again.');\n    }\n  };\n\n  // ENHANCED: Reset everything including selected patient\n  const handleResetEverything = () => {\n    // Clear all chat history\n    clearChatHistory();\n\n    // Clear current prediction context\n    setCurrentPrediction(null);\n\n    // Clear stored session\n    localStorage.removeItem('activeSessionId');\n\n    // Reinitialize\n    initializeChat();\n  };\n\n  // Show loading state\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center h-64\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show error state if no session ID could be created\n  if (!currentSessionId) {\n    return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-500 text-6xl mb-4\",\n            children: \"\\u26A0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900 mb-2\",\n            children: \"Unable to Initialize Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-4\",\n            children: \"There was a problem setting up your chat session.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: initializeChat,\n            className: \"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\",\n            children: \"Try Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(MessageSquare, {\n            className: \"w-8 h-8 text-blue-500 mr-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-3xl font-bold text-gray-900\",\n              children: \"Health Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2 text-lg text-gray-600\",\n              children: \"Get personalized advice about your cardiovascular health\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), currentPrediction && (user === null || user === void 0 ? void 0 : user.role) === 'doctor' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 text-sm bg-blue-50 border border-blue-200 rounded-lg p-2\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-blue-800 font-medium\",\n                children: [\"\\uD83D\\uDCAC Discussing: \", currentPrediction.patientId || 'Selected Patient', \"(\", currentPrediction.riskCategory, \" Risk - \", Math.round((currentPrediction.riskScore || 0) * 100), \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-sm text-orange-600\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNewChat,\n            className: \"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition flex items-center space-x-2\",\n            title: \"Start new chat (clears current conversation and patient selection)\",\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"New Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), (user === null || user === void 0 ? void 0 : user.role) === 'doctor' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetEverything,\n            className: \"px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition flex items-center space-x-2\",\n            title: \"Reset everything (clears all chats and patient selections)\",\n            children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Reset All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-xl shadow-lg\",\n        children: /*#__PURE__*/_jsxDEV(ChatInterface, {\n          sessionId: currentSessionId,\n          onNewChat: handleNewChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"wZmoLrCFHkBPVs0CRWxzYskHjrk=\", false, function () {\n  return [useAuth, useAppContext, useChat];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","useAppContext","useChat","DashboardLayout","ChatInterface","MessageSquare","Plus","RotateCcw","generateSessionId","isValidSessionId","createNewChatSession","getUserChatSessions","jsxDEV","_jsxDEV","Chat","_s","user","chatHistory","addToChatHistory","getChatHistory","clearChatHistory","setCurrentPrediction","currentPrediction","currentSessionId","setCurrentSessionId","sessions","setSessions","isLoading","setIsLoading","error","setError","initializeChat","userSessions","storedSessionId","localStorage","getItem","sessionExists","some","s","session_id","length","mostRecent","setItem","createNewSession","console","fallbackSessionId","sessionName","Date","toLocaleDateString","toLocaleTimeString","hour","minute","newSession","prev","Error","handleNewChat","log","handleResetEverything","removeItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","patientId","riskCategory","Math","round","riskScore","title","sessionId","onNewChat","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/pages/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useAppContext } from '../context/AppContext';\r\nimport { useChat } from '../context/ChatContext';\r\nimport DashboardLayout from '../layouts/DashboardLayout';\r\nimport ChatInterface from '../components/chat/ChatInterface';\r\nimport { MessageSquare, Plus, RotateCcw } from 'lucide-react';\r\nimport { generateSessionId, isValidSessionId } from '../utils/helpers';\r\nimport { createNewChatSession, getUserChatSessions } from '../services/chat';\r\n\r\nconst Chat = () => {\r\n  const { user } = useAuth();\r\n  const { \r\n    chatHistory, \r\n    addToChatHistory, \r\n    getChatHistory, \r\n    clearChatHistory \r\n  } = useAppContext();\r\n  const { \r\n    setCurrentPrediction, \r\n    currentPrediction \r\n  } = useChat();\r\n  \r\n  const [currentSessionId, setCurrentSessionId] = useState(null);\r\n  const [sessions, setSessions] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Initialize chat session when component mounts\r\n  useEffect(() => {\r\n    initializeChat();\r\n  }, []);\r\n\r\n  const initializeChat = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Try to load existing sessions first\r\n      const userSessions = await getUserChatSessions();\r\n      setSessions(userSessions || []);\r\n\r\n      // Check if we have a stored active session\r\n      const storedSessionId = localStorage.getItem('activeSessionId');\r\n      if (storedSessionId && isValidSessionId(storedSessionId)) {\r\n        // Verify session still exists on server\r\n        const sessionExists = userSessions?.some(s => s.session_id === storedSessionId);\r\n        if (sessionExists) {\r\n          setCurrentSessionId(storedSessionId);\r\n          return;\r\n        }\r\n      }\r\n\r\n      // If user has existing sessions, use the most recent one\r\n      if (userSessions && userSessions.length > 0) {\r\n        const mostRecent = userSessions[0];\r\n        if (isValidSessionId(mostRecent.session_id)) {\r\n          setCurrentSessionId(mostRecent.session_id);\r\n          localStorage.setItem('activeSessionId', mostRecent.session_id);\r\n        } else {\r\n          // Invalid session ID, create new one\r\n          await createNewSession();\r\n        }\r\n      } else {\r\n        // No existing sessions, create a new one\r\n        await createNewSession();\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to initialize chat sessions:', error);\r\n      // Fallback: create a local session ID\r\n      const fallbackSessionId = generateSessionId();\r\n      setCurrentSessionId(fallbackSessionId);\r\n      localStorage.setItem('activeSessionId', fallbackSessionId);\r\n      setError('Using offline mode. Some features may be limited.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const createNewSession = async () => {\r\n    try {\r\n      const sessionName = `Chat ${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}`;\r\n      const newSession = await createNewChatSession(sessionName);\r\n      \r\n      if (newSession && newSession.session_id) {\r\n        setCurrentSessionId(newSession.session_id);\r\n        localStorage.setItem('activeSessionId', newSession.session_id);\r\n        setSessions(prev => [newSession, ...prev]);\r\n      } else {\r\n        throw new Error('Invalid session response');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to create new session:', error);\r\n      // Fallback to local session\r\n      const fallbackSessionId = generateSessionId();\r\n      setCurrentSessionId(fallbackSessionId);\r\n      localStorage.setItem('activeSessionId', fallbackSessionId);\r\n      setError('Using offline mode. Messages may not be saved.');\r\n    }\r\n  };\r\n\r\n  // ENHANCED: Complete reset when starting new chat\r\n  const handleNewChat = async () => {\r\n    try {\r\n      // 1. Clear current prediction context (resets selected patient from batch)\r\n      setCurrentPrediction(null);\r\n      \r\n      // 2. Clear current session history\r\n      if (currentSessionId) {\r\n        clearChatHistory(currentSessionId);\r\n      }\r\n      \r\n      // 3. Create completely new session\r\n      await createNewSession();\r\n      \r\n      // 4. Show success feedback\r\n      console.log('✅ New chat started - all context cleared');\r\n      \r\n    } catch (error) {\r\n      console.error('Error starting new chat:', error);\r\n      setError('Failed to start new chat. Please try again.');\r\n    }\r\n  };\r\n\r\n  // ENHANCED: Reset everything including selected patient\r\n  const handleResetEverything = () => {\r\n    // Clear all chat history\r\n    clearChatHistory();\r\n    \r\n    // Clear current prediction context\r\n    setCurrentPrediction(null);\r\n    \r\n    // Clear stored session\r\n    localStorage.removeItem('activeSessionId');\r\n    \r\n    // Reinitialize\r\n    initializeChat();\r\n  };\r\n\r\n  // Show loading state\r\n  if (isLoading) {\r\n    return (\r\n      <DashboardLayout>\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          <div className=\"flex justify-center items-center h-64\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n          </div>\r\n        </div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  // Show error state if no session ID could be created\r\n  if (!currentSessionId) {\r\n    return (\r\n      <DashboardLayout>\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          <div className=\"text-center\">\r\n            <div className=\"text-red-500 text-6xl mb-4\">⚠️</div>\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Unable to Initialize Chat</h3>\r\n            <p className=\"text-gray-600 mb-4\">There was a problem setting up your chat session.</p>\r\n            <button\r\n              onClick={initializeChat}\r\n              className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\r\n            >\r\n              Try Again\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"mb-8 flex justify-between items-center\">\r\n          <div className=\"flex items-center\">\r\n            <MessageSquare className=\"w-8 h-8 text-blue-500 mr-3\" />\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold text-gray-900\">Health Assistant</h1>\r\n              <p className=\"mt-2 text-lg text-gray-600\">\r\n                Get personalized advice about your cardiovascular health\r\n              </p>\r\n              \r\n              {/* Show current context */}\r\n              {currentPrediction && user?.role === 'doctor' && (\r\n                <div className=\"mt-2 text-sm bg-blue-50 border border-blue-200 rounded-lg p-2\">\r\n                  <span className=\"text-blue-800 font-medium\">\r\n                    💬 Discussing: {currentPrediction.patientId || 'Selected Patient'} \r\n                    ({currentPrediction.riskCategory} Risk - {Math.round((currentPrediction.riskScore || 0) * 100)}%)\r\n                  </span>\r\n                </div>\r\n              )}\r\n              \r\n              {error && (\r\n                <p className=\"mt-1 text-sm text-orange-600\">\r\n                  {error}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Enhanced action buttons */}\r\n          <div className=\"flex space-x-2\">\r\n            <button\r\n              onClick={handleNewChat}\r\n              className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition flex items-center space-x-2\"\r\n              title=\"Start new chat (clears current conversation and patient selection)\"\r\n            >\r\n              <Plus className=\"w-4 h-4\" />\r\n              <span>New Chat</span>\r\n            </button>\r\n            \r\n            {/* Reset everything button for doctors */}\r\n            {user?.role === 'doctor' && (\r\n              <button\r\n                onClick={handleResetEverything}\r\n                className=\"px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition flex items-center space-x-2\"\r\n                title=\"Reset everything (clears all chats and patient selections)\"\r\n              >\r\n                <RotateCcw className=\"w-4 h-4\" />\r\n                <span>Reset All</span>\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n                \r\n        <div className=\"bg-white rounded-xl shadow-lg\">\r\n          <ChatInterface \r\n            sessionId={currentSessionId} \r\n            onNewChat={handleNewChat}\r\n          />\r\n        </div>\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}