{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\cvd-risk-project\\\\frontend\\\\cvd-risk-frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  // FIXED: Use 'access_token' to match api.js and auth.js\n  const [token, setToken] = useState(localStorage.getItem('access_token'));\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUser = async () => {\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      try {\n        // No need to manually add headers - api.js interceptor handles this\n        const res = await api.get('/auth/me');\n        setUser(res.data);\n      } catch (err) {\n        console.error('❌ Failed to fetch user:', err);\n        setUser(null);\n        // FIXED: Use 'access_token' key\n        localStorage.removeItem('access_token');\n        setToken(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUser();\n  }, [token]);\n  const login = async (email, password) => {\n    // Convert to form-urlencoded format to match auth.js\n    const formData = new URLSearchParams();\n    formData.append('username', email);\n    formData.append('password', password);\n    const res = await api.post('/auth/login', formData, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n    const accessToken = res.data.access_token;\n\n    // FIXED: Use 'access_token' key consistently\n    localStorage.setItem('access_token', accessToken);\n    setToken(accessToken);\n\n    // Fetch user data (api.js interceptor will add the token)\n    const userRes = await api.get('/auth/me');\n    setUser(userRes.data);\n    return userRes.data;\n  };\n  const register = async userData => {\n    const res = await api.post('/auth/register', userData);\n    return res.data;\n  };\n  const logout = () => {\n    // FIXED: Use 'access_token' key consistently\n    localStorage.removeItem('access_token');\n    setToken(null);\n    setUser(null);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      loading,\n      isAuthenticated: !!user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"miFgkosnPBTf6nGySR0pxXN/fNo=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","navigate","fetchUser","res","get","data","err","console","error","removeItem","login","email","password","formData","URLSearchParams","append","post","headers","accessToken","access_token","setItem","userRes","register","userData","logout","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  // FIXED: Use 'access_token' to match api.js and auth.js\r\n  const [token, setToken] = useState(localStorage.getItem('access_token'));\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // No need to manually add headers - api.js interceptor handles this\r\n        const res = await api.get('/auth/me');\r\n        setUser(res.data);\r\n      } catch (err) {\r\n        console.error('❌ Failed to fetch user:', err);\r\n        setUser(null);\r\n        // FIXED: Use 'access_token' key\r\n        localStorage.removeItem('access_token');\r\n        setToken(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUser();\r\n  }, [token]);\r\n\r\n  const login = async (email, password) => {\r\n    // Convert to form-urlencoded format to match auth.js\r\n    const formData = new URLSearchParams();\r\n    formData.append('username', email);\r\n    formData.append('password', password);\r\n\r\n    const res = await api.post('/auth/login', formData, {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      }\r\n    });\r\n\r\n    const accessToken = res.data.access_token;\r\n    \r\n    // FIXED: Use 'access_token' key consistently\r\n    localStorage.setItem('access_token', accessToken);\r\n    setToken(accessToken);\r\n\r\n    // Fetch user data (api.js interceptor will add the token)\r\n    const userRes = await api.get('/auth/me');\r\n    setUser(userRes.data);\r\n    \r\n    return userRes.data;\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    const res = await api.post('/auth/register', userData);\r\n    return res.data;\r\n  };\r\n\r\n  const logout = () => {\r\n    // FIXED: Use 'access_token' key consistently\r\n    localStorage.removeItem('access_token');\r\n    setToken(null);\r\n    setUser(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ \r\n      user, \r\n      login, \r\n      register, \r\n      logout, \r\n      loading, \r\n      isAuthenticated: !!user \r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}