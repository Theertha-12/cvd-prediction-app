{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: true\n});\n\n// Request interceptor to add the auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('access_token');\n    window.location = '/login';\n  }\n\n  // Better error handling\n  if (error.response) {\n    console.error('API Error:', {\n      status: error.response.status,\n      data: error.response.data,\n      url: error.config.url\n    });\n  } else {\n    console.error('API Error:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","api","create","baseURL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","status","removeItem","window","location","console","data","url","message","Promise","reject"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  withCredentials: true,\r\n});\r\n\r\n// Request interceptor to add the auth token\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('access_token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('access_token');\r\n      window.location = '/login';\r\n    }\r\n    \r\n    // Better error handling\r\n    if (error.response) {\r\n      console.error('API Error:', {\r\n        status: error.response.status,\r\n        data: error.response.data,\r\n        url: error.config.url\r\n      });\r\n    } else {\r\n      console.error('API Error:', error.message);\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEvD,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACI,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC1BO,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCP,YAAY,CAACQ,UAAU,CAAC,cAAc,CAAC;IACvCC,MAAM,CAACC,QAAQ,GAAG,QAAQ;EAC5B;;EAEA;EACA,IAAIL,KAAK,CAACD,QAAQ,EAAE;IAClBO,OAAO,CAACN,KAAK,CAAC,YAAY,EAAE;MAC1BE,MAAM,EAAEF,KAAK,CAACD,QAAQ,CAACG,MAAM;MAC7BK,IAAI,EAAEP,KAAK,CAACD,QAAQ,CAACQ,IAAI;MACzBC,GAAG,EAAER,KAAK,CAACP,MAAM,CAACe;IACpB,CAAC,CAAC;EACJ,CAAC,MAAM;IACLF,OAAO,CAACN,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACS,OAAO,CAAC;EAC5C;EAEA,OAAOC,OAAO,CAACC,MAAM,CAACX,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAed,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}