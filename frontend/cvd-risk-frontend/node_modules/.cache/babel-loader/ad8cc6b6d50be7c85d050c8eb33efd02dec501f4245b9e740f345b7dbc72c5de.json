{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\cvd-risk-project\\\\frontend\\\\cvd-risk-frontend\\\\src\\\\components\\\\chat\\\\ChatInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { getChatSessions, getChatMessages, sendChatMessage } from \"../../services/chat\";\nimport MessageBubble from \"./MessageBubble\";\nimport SessionSidebar from \"./SessionSidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userMenuButtons = [\"What can I do to lower my CVD risk?\", \"What does my prediction mean?\", \"Show tips to improve heart health\"];\nconst doctorMenuButtons = [\"Show statistics for my patients\", \"Recent high-risk cases?\", \"Download batch results\"];\nexport default function ChatInterface({\n  role\n}) {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [sessionId, setSessionId] = useState(\"\");\n  const [sessions, setSessions] = useState([]);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    getChatSessions().then(data => {\n      setSessions(data);\n      if (data.length > 0) setSessionId(data[0].session_id);\n    });\n  }, []);\n  useEffect(() => {\n    if (!sessionId) return setMessages([]);\n    getChatMessages(sessionId).then(res => setMessages(res.messages || []));\n  }, [sessionId]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const menuBtns = role === \"doctor\" ? doctorMenuButtons : userMenuButtons;\n  async function sendMessage(message) {\n    if (!message.trim()) return;\n    setMessages(prev => [...prev, {\n      msg: message,\n      sender: \"user\"\n    }]);\n    setInput(\"\");\n    try {\n      const res = await sendChatMessage(message, sessionId || \"\");\n      setMessages(prev => [...prev, {\n        msg: res.response,\n        sender: \"bot\"\n      }]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        msg: \"Sorry, something went wrong.\",\n        sender: \"bot\"\n      }]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex max-w-7xl mx-auto border rounded shadow h-[600px] overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(SessionSidebar, {\n      sessions: sessions,\n      currentSessionId: sessionId,\n      setSessionId: setSessionId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col flex-grow bg-white p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow overflow-y-auto mb-2\",\n        children: [messages.map((m, idx) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n          message: m.msg,\n          sender: m.sender\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 flex flex-wrap gap-2\",\n        children: menuBtns.map((btn, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendMessage(btn),\n          className: \"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\",\n          children: btn\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          sendMessage(input);\n        },\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: 500,\n          className: \"flex-grow border rounded-l px-4 py-2\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message here...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-green-600 hover:bg-green-700 text-white px-6 rounded-r\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInterface, \"WHgLR6e/h90e+iQcH7E7qnuIHPY=\", false, function () {\n  return [useAuth];\n});\n_c = ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","getChatSessions","getChatMessages","sendChatMessage","MessageBubble","SessionSidebar","jsxDEV","_jsxDEV","userMenuButtons","doctorMenuButtons","ChatInterface","role","_s","user","messages","setMessages","input","setInput","sessionId","setSessionId","sessions","setSessions","messagesEndRef","then","data","length","session_id","res","_messagesEndRef$curre","current","scrollIntoView","behavior","menuBtns","sendMessage","message","trim","prev","msg","sender","response","err","className","children","currentSessionId","fileName","_jsxFileName","lineNumber","columnNumber","map","m","idx","ref","btn","onClick","onSubmit","e","preventDefault","type","maxLength","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/cvd-risk-project/frontend/cvd-risk-frontend/src/components/chat/ChatInterface.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport { getChatSessions, getChatMessages, sendChatMessage } from \"../../services/chat\";\r\nimport MessageBubble from \"./MessageBubble\";\r\nimport SessionSidebar from \"./SessionSidebar\";\r\n\r\nconst userMenuButtons = [\r\n  \"What can I do to lower my CVD risk?\",\r\n  \"What does my prediction mean?\",\r\n  \"Show tips to improve heart health\",\r\n];\r\nconst doctorMenuButtons = [\r\n  \"Show statistics for my patients\",\r\n  \"Recent high-risk cases?\",\r\n  \"Download batch results\",\r\n];\r\n\r\nexport default function ChatInterface({ role }) {\r\n  const { user } = useAuth();\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [sessionId, setSessionId] = useState(\"\");\r\n  const [sessions, setSessions] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    getChatSessions().then(data => {\r\n      setSessions(data);\r\n      if (data.length > 0) setSessionId(data[0].session_id);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!sessionId) return setMessages([]);\r\n    getChatMessages(sessionId).then(res => setMessages(res.messages || []));\r\n  }, [sessionId]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const menuBtns = role === \"doctor\" ? doctorMenuButtons : userMenuButtons;\r\n\r\n  async function sendMessage(message) {\r\n    if (!message.trim()) return;\r\n    setMessages(prev => [...prev, { msg: message, sender: \"user\" }]);\r\n    setInput(\"\");\r\n    try {\r\n      const res = await sendChatMessage(message, sessionId || \"\");\r\n      setMessages(prev => [...prev, { msg: res.response, sender: \"bot\" }]);\r\n    } catch (err) {\r\n      setMessages(prev => [...prev, { msg: \"Sorry, something went wrong.\", sender: \"bot\" }]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex max-w-7xl mx-auto border rounded shadow h-[600px] overflow-hidden\">\r\n      <SessionSidebar\r\n        sessions={sessions}\r\n        currentSessionId={sessionId}\r\n        setSessionId={setSessionId}\r\n      />\r\n      <div className=\"flex flex-col flex-grow bg-white p-4\">\r\n        <div className=\"flex-grow overflow-y-auto mb-2\">\r\n          {messages.map((m, idx) => (\r\n            <MessageBubble key={idx} message={m.msg} sender={m.sender} />\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n        <div className=\"mb-4 flex flex-wrap gap-2\">\r\n          {menuBtns.map((btn, idx) => (\r\n            <button key={idx} onClick={() => sendMessage(btn)}\r\n              className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\">{btn}</button>\r\n          ))}\r\n        </div>\r\n        <form onSubmit={e => { e.preventDefault(); sendMessage(input); }} className=\"flex\">\r\n          <input type=\"text\" maxLength={500} className=\"flex-grow border rounded-l px-4 py-2\"\r\n            value={input} onChange={e => setInput(e.target.value)}\r\n            placeholder=\"Type your message here...\" required />\r\n          <button type=\"submit\" className=\"bg-green-600 hover:bg-green-700 text-white px-6 rounded-r\">Send</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}